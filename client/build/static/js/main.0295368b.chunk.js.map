{"version":3,"sources":["Pages/images/adventages/Number-1-icon.png","Pages/images/adventages/Number-2-icon.png","Pages/images/adventages/Number-3-icon.png","Pages/images/adventages/Number-4-icon.png","Pages/images/adventages/Number-5-icon.png","Pages/images/adventages/Number-6-icon.png","Pages/images/adventages/adv.jpg","Pages/images/catalog/iron.png","Pages/images/catalog/interier.png","store/actions/messageAction.js","Components/Header.jsx","store/actions/types.js","Components/Footer.jsx","Pages/Advantage.jsx","Pages/Catalog.jsx","Pages/Contact.jsx","store/actions/layoutAction.js","Components/ControlledCarousel.jsx","Components/About.jsx","store/actions/doorsAction.js","Components/Items.jsx","Components/Brends.jsx","Components/Landing.jsx","Pages/Interior.jsx","Pages/Iron.jsx","Pages/Catalogs.jsx","store/actions/auhtAction.js","Components/Doors.jsx","Components/Notification.jsx","Components/Orders.jsx","Components/AdminSlider.jsx","Components/AboutAdmin.jsx","Components/AdminBrends.jsx","Components/Administrator.jsx","Components/SignIn.jsx","Pages/InteriorDesc.jsx","Pages/IronDesc.jsx","Pages/DoorDesc.jsx","Components/PrivateRoute.jsx","store/reducers/authReducer.js","store/reducers/layoutReducer.js","store/reducers/messageReducer.js","store/reducers/doorsReducer.js","store/configureStore.js","Components/CreateDoor.jsx","Components/Logout.jsx","App.jsx","index.jsx"],"names":["module","exports","domain","connect","sendMessage","doc","dispatch","a","axios","method","url","headers","data","type","props","useState","show","setShow","name","phone","message","setMessage","handleClose","onChange","e","target","value","Modal","onHide","Header","closeButton","Title","Body","Form","className","onSubmit","preventDefault","test","Group","controlId","Control","placeholder","required","Button","Navbar","fixed","collapseOnSelect","expand","variant","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","to","onClick","Footer","Row","Col","xs","md","ListGroup","Item","icon","faAngleRight","faMapMarked","faPhone","faEnvelope","style","backgroundColor","dangerouslySetInnerHTML","Advantage","background","width","height","backgroundSize","backgroundRepeat","backgroundPosition","padding","display","flexDirection","textAlign","marginBottom","fontWeight","firstBackground","backgroundImage","Background1","secondBackground","Background2","thirdBackground","Background3","fourthBackground","Background4","fifthBackground","Background5","sixthBackground","Background6","sm","src","adv","alt","Catalog","Iron","Interior","Contact","frameBorder","getHomePage","get","payload","state","layout","slide","setSlide","useEffect","slider","length","items","nav","loop","autoplay","slideBy","dots","dotsEach","dotData","smartSpeed","map","res","key","_id","About","about","setAbout","images","createDoor","sendDoorData","success","smallImageSame","doorId","post","response","sendDoorDataToUpdate","put","getDoors","doors","getInteriorDoors","skip","limit","getIronDoors","ironDoor","setIronDoors","interiorDoor","setInteriorDoors","filter","item","category","iron","interior","console","log","CardDeck","index","Card","Img","frontImage","backImage","title","price","color","textDecoration","priceFront","brend","setBrend","margin","responsive","0","300","600","1000","Landing","marginTop","otherColor","image","useStyles","makeStyles","theme","root","spacing","justifyContent","setDoors","classes","selectedCategory","location","pathname","reverse","Pagination","count","size","setAuthToken","token","localStorage","setItem","Init","getItem","checkToken","logout","authorization","removeItem","maxWidth","mediaFront","float","mediaBack","mediaBackInterior","center","useStyle","appBar","position","save","adminDoor","marginLeft","marginRight","adminBackDoor","flex","flexBetween","flexDirectionEnd","auth","updateDoor","createDoorOtherColor","formData","FormData","append","selectedDoors","open","setOpen","openInterior","setOpenInterior","smallImage","setSmallImage","selectedDoor","setSelectedDoor","classe","onChangeFrontImage","event","files","patch","persist","addingValue","includes","onLittleChange","arrayName","newArray","handleAddSmallImage","handleSmallImageSave","window","reload","handleSaveAndClose","Grid","container","lg","CardActionArea","CardMedia","CardContent","Typography","component","CardActions","Dialog","fullScreen","onClose","AppBar","Toolbar","IconButton","edge","aria-label","autoFocus","Table","striped","bordered","hover","side","picture","defaultValue","manufacturer","doorBlockSize","series","metalSheetThickness","thickness","strengthClass","performanceValue","burglarResistanceClass","numberOfLoops","antiSeize","clipAdjustment","box","platbandDepartureFromTheBox","mount","insulation","castleStrengthening","nightValve","thermalBreak","zinkogrunt","doorWeight","moreImage","onclose","inside","coating","glazing","fullPrice","top","right","messages","getSeenMessages","markAsSeen","setMessages","seenMessages","List","ListItem","dense","button","ListItemIcon","Checkbox","checked","handleToggle","ListItemText","primary","getMessages","deleteMessage","onMessageDelete","messagesData","titleP","updateSlider","img","addSlide","deleteSlide","delete","setSlider","newSlide","setNewSlide","onUpdateSlider","onSlidePicker","onNewSlideAdd","onDeleteSlide","onUpdatePicker","img_form","updateAboutImage","setImg","about_image","sendImage","new_img","updateBrend","addBrend","deleteBrend","newBrend","setNewBrend","onUpdateBrend","onBrendPicker","onNewBrendAdd","onDeleteBrend","toolbar","paddingRight","toolbarIcon","alignItems","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","paper","fixedHeight","addButton","svg","polygon","fill","palette","common","white","stroke","divider","strokeWidth","doorType","setDoorType","collection","setCollection","activeMenu","setActiveMenu","setChecked","modalShow","setModalShow","menus","orders","brends","notificationStyle","clsx","CssBaseline","noWrap","FormControlLabel","control","prev","Badge","badgeContent","Drawer","Divider","ButtonToolbar","aria-labelledby","centered","Box","pt","avatar","secondary","main","form","submit","login","then","catch","password","input","setInput","Avatar","noValidate","TextField","fullWidth","label","autoComplete","email","mt","InteriorDesc","door","backContent","info","itemImg","options","Number","active","IronDesc","frontColor","DoorDesc","allDoors","setStyle","setInfo","slideImage","handleClick","getInfo","rest","render","React","createElement","initialState","isAuthenticated","rootReducer","combineReducers","action","about_img","msg","middleware","thunk","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","setValue","onchange","onImagePick","Object","keys","as","Label","disabled","Redirect","Logout","App","exact","path","Administrator","SignIn","Catalogs","Orders","AdminSlider","AboutAdmin","AdminBrends","CreateDoor","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0295368b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Number-1-icon.e495e5ab.png\";","module.exports = __webpack_public_path__ + \"static/media/Number-2-icon.b226ea6b.png\";","module.exports = __webpack_public_path__ + \"static/media/Number-3-icon.16dceb92.png\";","module.exports = __webpack_public_path__ + \"static/media/Number-4-icon.395c817b.png\";","module.exports = __webpack_public_path__ + \"static/media/Number-5-icon.95c8e216.png\";","module.exports = __webpack_public_path__ + \"static/media/Number-6-icon.786e69d3.png\";","module.exports = __webpack_public_path__ + \"static/media/adv.d543001d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iron.9bb16c5a.png\";","module.exports = __webpack_public_path__ + \"static/media/interier.3cbd4ca3.png\";","import {\r\n  MESSAGE_SEND,\r\n  GET_MESSAGES,\r\n  GET_SEEN_MESSAGES,\r\n  DELETE_MESSAGE,\r\n  MARK_AS_SEEN,\r\n} from './types'\r\nimport axios from 'axios'\r\n\r\nconst domain = 'http://localhost:4000'\r\n\r\nexport const sendMessage = doc => {\r\n  return async dispatch => {\r\n    let data = await axios({\r\n      method: 'POST',\r\n      url: `${domain}/messages`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: doc,\r\n    })\r\n    dispatch({type: MESSAGE_SEND})\r\n  }\r\n}\r\n\r\nexport const getMessages = () => {\r\n  return async dispatch => {\r\n    let data = await axios({\r\n      method: 'GET',\r\n      url: `${domain}/messages`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    dispatch({type: GET_MESSAGES, payload: data.data})\r\n  }\r\n}\r\n\r\nexport const getSeenMessages = () => {\r\n  return async dispatch => {\r\n    let data = await axios({\r\n      method: 'GET',\r\n      url: `${domain}/messages?seen=false`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    dispatch({type: GET_SEEN_MESSAGES, payload: data.data})\r\n  }\r\n}\r\n\r\nexport const deleteMessage = id => {\r\n  return async dispatch => {\r\n    let data = await axios({\r\n      method: 'DELETE',\r\n      url: `${domain}/messages/${id}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    dispatch({type: DELETE_MESSAGE})\r\n    if (data.data.success) {\r\n      return {success: true}\r\n    }\r\n  }\r\n}\r\n\r\nexport const markAsSeen = id => {\r\n  return async dispatch => {\r\n    let data = await axios({\r\n      method: 'PATCH',\r\n      url: `${domain}/messages/${id}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    dispatch({type: MARK_AS_SEEN, payload: data.data})\r\n  }\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Navbar} from 'react-bootstrap'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Button from 'react-bootstrap/Button'\r\nimport './Header.css'\r\nimport {Link} from 'react-router-dom'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {sendMessage} from '../store/actions/messageAction'\r\n\r\nconst Header = props => {\r\n  const [show, setShow] = useState(false)\r\n  const [message, setMessage] = useState({name: '', phone: ''})\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n\r\n  const onChange = e => {\r\n    setMessage({\r\n      ...message,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    let re = /[0-9]/\r\n    e.preventDefault()\r\n    if (!re.test(message.phone)) {\r\n\r\n      return false\r\n    }\r\n    props.sendMessage(message)\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Бесплатный вызов замерщика</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Заполните все поля</p>\r\n          <Form className=\"flexCenter\" onSubmit={onSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={onChange}\r\n                placeholder=\"Ваше имя\"\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <p>Введите номер телефона</p>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                onChange={onChange}\r\n                placeholder=\"Ваш телефон\"\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Button className=\"custom-bg\" type=\"submit\">\r\n              вызвать\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <Navbar\r\n        fixed=\"top\"\r\n        collapseOnSelect\r\n        expand=\"md\"\r\n        className=\"backGround top\"\r\n        variant=\"dark\"\r\n      >\r\n        <Container>\r\n          <Navbar.Brand href=\"/\">VANDOORS</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto ml-auto\">\r\n              <Link to=\"/\">Главная</Link>\r\n              <Link to=\"/advantage\">Наши преимущества</Link>\r\n              <Link to=\"/catalog\">Каталог</Link>\r\n              <Link to=\"/contact\">Расположение</Link>\r\n            </Nav>\r\n            <Button className=\"custom-bg\" onClick={handleShow}>\r\n              Вызвать замерщика\r\n            </Button>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(null, {sendMessage})(Header)\r\n","export const ADMIN_LOGIN = 'ADMIN_LOGIN'\r\nexport const ADMIN_LOGOUT = 'ADMIN_LOGOUT'\r\nexport const HOMEPAGE_DATA = 'HOMEPAGE_DATA'\r\nexport const MESSAGE_SEND = 'MESSAGE_SEND'\r\nexport const GET_MESSAGES = 'GET_MESSAGES'\r\nexport const GET_SEEN_MESSAGES = 'GET_SEEN_MESSAGES'\r\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE'\r\nexport const MARK_AS_SEEN = 'MARK_AS_SEEN'\r\nexport const UPDATE_ABOUT_IMG = 'UPDATE_ABOUT_IMG'\r\nexport const UPDATE_SLIDER = 'UPDATE_SLIDER'\r\nexport const ADD_SLIDE = 'ADD_SLIDE'\r\nexport const DELETE_SLIDE = 'DELETE_SLIDE'\r\nexport const ADD_BREND = 'ADD_BREND'\r\nexport const DELETE_BREND = 'DELETE_BREND'\r\nexport const GET_INTERIOR = 'GET_INTERIOR'\r\nexport const GET_IRON = 'GET_IRON'\r\nexport const GET_ALL = 'GET_ALL'\r\nexport const UPDATE_BREND = 'UPDATE_BREND'\r\nexport const CREATE_DOOR = 'CREATE_DOOR'\r\nexport const UPDATE_DOOR = 'UPDATE_DOOR'\r\n","import React from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport './Footer.css'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faAngleRight, faMapMarked, faPhone, faEnvelope} from '@fortawesome/free-solid-svg-icons'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer className=\"footer backGround\">\r\n        <Container>\r\n          <Row>\r\n            <Col xs={6} md={3}>\r\n              <p className=\"footer_header\"><span>О нас</span></p>\r\n              <h3>VANDOORS</h3>\r\n              <p className={'query'}>Lorem ipsum dolor sit amet, consectetur adipisicing elit. </p>\r\n            </Col>\r\n            <Col xs={6} md={2}>\r\n              <p className=\"footer_header\"><span>Ссылки</span></p>\r\n\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item className=\"padding0\"><span><FontAwesomeIcon icon={faAngleRight}/></span> <span> О Компании</span></ListGroup.Item>\r\n                <ListGroup.Item className=\"padding0\"><span><FontAwesomeIcon icon={faAngleRight}/></span>\r\n                  <span> Бренди</span> </ListGroup.Item>\r\n                <ListGroup.Item className=\"padding0\"><span><FontAwesomeIcon icon={faAngleRight}/></span> <span> Наши преимущества</span></ListGroup.Item>\r\n                <ListGroup.Item className=\"padding0\"><span><FontAwesomeIcon icon={faAngleRight}/></span>\r\n                  <span> Каталог</span></ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col xs={6} md={3}>\r\n              <p className=\"footer_header\"><span>Обратная связь </span></p>\r\n              <ListGroup>\r\n                <ListGroup.Item><span className=\"footerSpan\"><FontAwesomeIcon icon={faMapMarked}/></span><span>г. Москва, Открытое шоссе, дом 9, стр. 11</span></ListGroup.Item>\r\n                <ListGroup.Item><span className=\"footerSpan\"><FontAwesomeIcon icon={faPhone}/></span><span>8 (901) 55-44-000  <br/>  8 (919) 99-44-000</span></ListGroup.Item>\r\n                <ListGroup.Item><span className=\"footerSpan\"><FontAwesomeIcon icon={faEnvelope}/></span><span>г. Москва, Открытое шоссе, дом 9, стр. 11</span></ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              <p className=\"footer_header\"><span>Рабочие дни</span></p>\r\n              <ListGroup>\r\n                <ListGroup.Item\r\n                  className=\"fz14\"><span>С понедельника > До пятницы:</span><span>09։00 - 18։00</span></ListGroup.Item>\r\n                <ListGroup.Item className=\"fz14\"><span>В субботу:</span><span>09։00 - 13։00</span></ListGroup.Item>\r\n                <ListGroup.Item className=\"fz14\"><span>В воскресенье:</span><span>Не работаем </span></ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          <hr style={{backgroundColor: '#ffffff'}}/>\r\n          <div className=\"copy\"><span dangerouslySetInnerHTML={{'__html': '&copy;'}}/> <span> Все права защищены</span>\r\n          </div>\r\n\r\n        </Container>\r\n      </footer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, {useState} from 'react'\r\nimport './Adventage.css'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Background1 from './images/adventages/Number-1-icon.png'\r\nimport Background2 from './images/adventages/Number-2-icon.png'\r\nimport Background3 from './images/adventages/Number-3-icon.png'\r\nimport Background4 from './images/adventages/Number-4-icon.png'\r\nimport Background5 from './images/adventages/Number-5-icon.png'\r\nimport Background6 from './images/adventages/Number-6-icon.png'\r\nimport adv from './images/adventages/adv.jpg'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Footer from '../Components/Footer'\r\n\r\nconst Advantage = () => {\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  const handleClose = () => setShow(false)\r\n\r\n  const handleShow = () => setShow(true)\r\n\r\n  let background = {\r\n    width: '100%',\r\n    height: 'auto',\r\n    backgroundSize: 'contain',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    padding: '100px 0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n    marginBottom: '50px',\r\n    fontWeight: '600',\r\n  }\r\n  let firstBackground = {\r\n    backgroundImage: `url(${Background1})`,\r\n  }\r\n  let secondBackground = {\r\n    backgroundImage: `url(${Background2})`,\r\n  }\r\n  let thirdBackground = {\r\n    backgroundImage: `url(${Background3})`,\r\n  }\r\n  let fourthBackground = {\r\n    backgroundImage: `url(${Background4})`,\r\n  }\r\n  let fifthBackground = {\r\n    backgroundImage: `url(${Background5})`,\r\n  }\r\n  let sixthBackground = {\r\n    backgroundImage: `url(${Background6})`,\r\n  }\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Бесплатный вызов замерщика</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n          <p>Заполните все поля</p>\r\n          <Form className='flexCenter'>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Control type=\"text\" placeholder=\"Ваше имя\"/>\r\n\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Control type=\"text\" placeholder=\"Ваш телефон\"/>\r\n            </Form.Group>\r\n            <Button className=\"custom-bg\" type=\"submit\" onClick={handleClose}>\r\n              вызвать\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <h2 className=\"headTop\">Наши преимущества</h2>\r\n      <Container>\r\n        <Row>\r\n          <Col xs={6} md={4}>\r\n            <div style={{...firstBackground, ...background}} className=\"adv\">\r\n              <h4>Гарантия качества</h4>\r\n              <p>Гарантия на входные и межкомнатные двери - 1 год. Дополнительно гарантируем качество монтажа, также на\r\n                1 год.</p>\r\n            </div>\r\n          </Col>\r\n          <Col xs={6} md={4}>\r\n            <div style={{...secondBackground, ...background}} className=\"adv\">\r\n              <h4>Доставка на следующий день</h4>\r\n              <p>Благодаря собственному складу, выбранную дверь мы доставляем на следующий день после оформления\r\n                заказа.</p>\r\n            </div>\r\n          </Col>\r\n          <Col xs={6} md={4}>\r\n            <div style={{...thirdBackground, ...background}} className=\"adv\">\r\n              <h4>Собственное производство</h4>\r\n              <p>Мы специализируемся на создании качественного и доступного во всех отношениях продукта.</p>\r\n            </div>\r\n          </Col>\r\n          <Col xs={6} md={4}>\r\n            <div style={{...fourthBackground, ...background}} className=\"adv\">\r\n              <h4>Огромный ассортимент</h4>\r\n              <p>Более 300 готовых решений, которые удовлетворят вкусы даже самых требовательных покупателей.</p>\r\n            </div>\r\n          </Col>\r\n          <Col xs={6} md={4}>\r\n            <div style={{...fifthBackground, ...background}} className=\"adv\">\r\n              <h4>Вызов замерщика - бесплатно</h4>\r\n              <p>Мастер-замерщик снимет точные размеры дверного проема для создания подробного дизайн-проекта.</p>\r\n            </div>\r\n          </Col>\r\n          <Col xs={6} md={4}>\r\n            <div style={{...sixthBackground, ...background}} className=\"adv\">\r\n              <h4>Эксклюзивная продукция</h4>\r\n              <p>Возможность изготовления индивидуальных заказов по чертежам и эскизам покупателя.</p>\r\n            </div>\r\n          </Col>\r\n          <Col xs={12} sm={6} md={6} className=\"flex-column flexAdventage\">\r\n            <h4>Бесплатный вызов мастера-замерщика, который снимет точные размеры дверного проема для создания\r\n              подробного дизайн-проекта.</h4>\r\n            <Button className=\"custom-bg marginAuto\" onClick={handleShow}>Вызвать замерщика</Button>\r\n            <p>*Вызов замерщика является полностью бесплатным</p>\r\n          </Col>\r\n          <Col xs={12} sm={6} md={6}>\r\n            <img src={adv} alt=\"двери \" className=\"w-100 mb-40\"/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Advantage","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport {Link} from 'react-router-dom'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Iron from './images/catalog/iron.png'\r\nimport Interior from './images/catalog/interier.png'\r\nimport './Catalog.css'\r\nimport Footer from '../Components/Footer'\r\n\r\nconst Catalog = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2 className=\"headTop\">Каталог</h2>\r\n        <Row>\r\n          <Col xs={5} sm={5} md={5}>\r\n            <Link to=\"/catalogs/iron\">\r\n              <div className=\"w-100 imageHover\">\r\n                <img src={Iron} alt=\"\" className=\"w-100 image\"/>\r\n                <div className=\"middle\">\r\n                  <div className=\"text\">входные двери</div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </Col>\r\n          <Col xs={2} sm={2} md={2}/>\r\n          <Col xs={5} sm={5} md={5}>\r\n            <Link to=\"/catalogs/iron2\">\r\n              <div className=\"w-100 imageHover\">\r\n                <img src={Interior} alt=\"\" className=\"w-100 image\"/>\r\n                <div className=\"middle\">\r\n                  <div className=\"text\">межкомнатные двери</div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Catalog\r\n","import React from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport './Contact.css'\r\nimport Footer from '../Components/Footer'\r\n\r\nconst Contact = () => {\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"headTop\">Наше расположение</h2>\r\n      <Container>\r\n        <Row>\r\n          <Col xs={12} md={5}>\r\n            <div className=\"flexContact\">\r\n              <h3>Где мы находимся?</h3>\r\n              <p>г. Москва Открытое шоссе, дом 9, стр. 11</p>\r\n            </div>\r\n          </Col>\r\n          <Col xs={12} md={7} className=\"mb-50\" className={'iframeclass'}>\r\n            <iframe\r\n              src=\"https://yandex.ru/map-widget/v1/?um=constructor%3Aa51e9e339159f0e01dc8d0592705c49af35e75379805d72a543d046c8314b566&amp;source=constructor\"\r\n              width=\"100%\" height=\"421\" frameBorder=\"0\"/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Contact","import {\r\n  HOMEPAGE_DATA,\r\n  UPDATE_ABOUT_IMG,\r\n  ADD_SLIDE,\r\n  UPDATE_SLIDER,\r\n  DELETE_SLIDE,\r\n  UPDATE_BREND,\r\n  DELETE_BREND,\r\n  ADD_BREND,\r\n} from './types'\r\nimport axios from 'axios'\r\n\r\nconst domain = 'http://localhost:4000'\r\n\r\nexport const getHomePage = () => {\r\n  return async dispatch => {\r\n    let data = await axios.get(`${domain}/layout/homepage`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    dispatch({type: HOMEPAGE_DATA, payload: data.data})\r\n  }\r\n}\r\n\r\nexport const updateAboutImage = (img) => {\r\n  return async dispatch => {\r\n    let data = await axios.post(`${domain}/layout/about_img`, img, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    console.log(data.data)\r\n    if (data.data.success) {\r\n      dispatch({type: UPDATE_ABOUT_IMG, payload: data.data})\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const updateSlider = (id, img) => {\r\n  return async dispatch => {\r\n    let data = await axios.patch(`${domain}/layout/slider/${id}`, img, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    console.log(data.data)\r\n    if (data.data.success) {\r\n      dispatch({type: UPDATE_SLIDER, payload: data.data})\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const addSlide = (img) => {\r\n  return async dispatch => {\r\n    let data = await axios.post(`${domain}/layout/slider`, img, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    console.log(data.data)\r\n    if (data.data.success) {\r\n      dispatch({type: ADD_SLIDE, payload: data.data})\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteSlide = (id) => {\r\n  return async dispatch => {\r\n    let data = await axios.delete(`${domain}/layout/slider/${id}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    if (data.data.success) {\r\n      dispatch({type: DELETE_SLIDE, payload: data.data})\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const updateBrend = (id, img) => {\r\n  return async dispatch => {\r\n    let data = await axios.patch(`${domain}/layout/brend/${id}`, img, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    if (data.data.success) {\r\n      dispatch({type: UPDATE_BREND, payload: data.data})\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const addBrend = (img) => {\r\n  return async dispatch => {\r\n    let data = await axios.post(`${domain}/layout/brend`, img, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    if (data.data.success) {\r\n      dispatch({type: ADD_BREND, payload: data.data})\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteBrend = (id) => {\r\n  return async dispatch => {\r\n    let data = await axios.delete(`${domain}/layout/brend/${id}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    if (data.data.success) {\r\n      dispatch({type: DELETE_BREND, payload: data.data})\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport OwlCarousel from 'react-owl-carousel'\r\nimport 'owl.carousel/dist/assets/owl.carousel.css'\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css'\r\nimport data from '../data.json'\r\nimport './ControlledCarousel.css'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getHomePage } from '../store/actions/layoutAction'\r\n\r\nconst ControlledCarousel = props => {\r\n  const [slide, setSlide] = useState([])\r\n  useEffect(() => {\r\n    props.getHomePage()\r\n    // setSlide(data.images.slideImages);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setSlide(props.layout.slider)\r\n  }, [props.layout])\r\n\r\n  const options = {\r\n    items: 1,\r\n    nav: false,\r\n    loop: true,\r\n    autoplay: true,\r\n    slideBy: 1,\r\n    dots: true,\r\n    dotsEach: true,\r\n    dotData: true,\r\n    smartSpeed: 1500,\r\n  }\r\n  // console.log('slide', slide)\r\n  return (\r\n    <div className=\"slide\">\r\n      <h1 className=\"carouselHeader\">Входные и межкомнатные двери</h1>\r\n      {!slide.length ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n          <OwlCarousel className=\"owl-theme\" {...options}>\r\n            {slide.map(res => {\r\n              return (\r\n                <div className=\"item\" key={res._id}>\r\n                  <img alt=\"\" src={res.url} />\r\n                </div>\r\n              )\r\n            })}\r\n          </OwlCarousel>\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    layout: state.layout,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getHomePage })(ControlledCarousel)\r\n","import React, {useState, useEffect} from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col'\r\nimport './About.css'\r\nimport data from '../data.json'\r\n\r\nconst About = () => {\r\n  const [about, setAbout] = useState('')\r\n\r\n  useEffect(() => {\r\n    setAbout(data.images.about)\r\n  }, [])\r\n  return (\r\n    <div className=\"about\">\r\n      <Container>\r\n        <Row>\r\n          <Col md={6} sm={6}>\r\n            <img key={about} src={about} alt=\"\" className=\"aboutImg\"/>\r\n          </Col>\r\n          <Col className=\"flex\" md={6} sm={6}>\r\n            <h2>О нас</h2>\r\n            <p>VANDOORS - дистрибьютор по продаже входных и межкомнатных дверей.</p>\r\n            <div className=\"line\"/>\r\n            <p>«Двери Регионов» - торгово-производственная компания, начавшая свою деятельность в 2008 году, сегодня\r\n              является одним из лидирующих поставщиков межкомнатных и входных дверей на московском рынке.</p>\r\n            <p>Целью Группы Компаний «Двери Регионов» является полноценное и комплексное удовлетворение потребности\r\n              людей при приобретении дверей, создание качественного и доступного во всех отношениях продукта.</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","import { CREATE_DOOR, GET_INTERIOR, GET_IRON, GET_ALL, UPDATE_DOOR } from './types'\r\nimport axios from 'axios'\r\n\r\nexport const domain = 'http://localhost:4000'\r\n\r\nexport const createDoor = data => {\r\n  return async () => {\r\n    let response = await sendDoorData(data)\r\n    if (response.success) {\r\n      return { success: true }\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateDoor = (doorId, data) => {\r\n  return async () => {\r\n    let response = await sendDoorDataToUpdate(doorId, data)\r\n    if (response.success) {\r\n      return { success: true }\r\n    }\r\n  }\r\n}\r\n\r\nconst smallImageSame = async (doorId, data) => {\r\n  try {\r\n    const response = await axios.post(`${domain}/doors/${doorId}/other-color`, data, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      },\r\n    )\r\n\r\n    return response.data.data\r\n  } catch (e) {\r\n    return\r\n  }\r\n}\r\n\r\nexport const createDoorOtherColor = (doorId, data) => {\r\n  return async dispatch => {\r\n    const formData = new FormData()\r\n    for (const key in data) {\r\n      if ('image' === key) {\r\n        formData.append('img', data[key])\r\n      } else {\r\n        formData.append(key, data[key])\r\n      }\r\n    }\r\n\r\n    let response = await smallImageSame(doorId, formData)\r\n    if (response.success) {\r\n      dispatch({ type: UPDATE_DOOR, payload: response.data })\r\n    }\r\n  }\r\n\r\n// return async dispatch => {\r\n//   let response = await sendDoorData(img)\r\n//   if (response.success) {\r\n//     return {success: true}\r\n//   }\r\n// }\r\n}\r\n\r\nconst sendDoorData = async data => {\r\n  let response = await axios.post(`${domain}/doors/`, data, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  })\r\n  return response.data\r\n}\r\nconst sendDoorDataToUpdate = async (doorId, data) => {\r\n  let response = await axios.put(`${domain}/doors/${doorId}`, data, {\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=utf-8',\r\n    },\r\n  })\r\n  return response.data\r\n}\r\n\r\nexport const getInteriorDoors = (skip = 0, limit = 12) => {\r\n  return async dispatch => {\r\n    let response = await axios.get(`${domain}/doors?type=interior&skip=${skip}&limit=${limit}`, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    if (response.data.success) {\r\n      dispatch({ type: GET_INTERIOR, payload: response.data })\r\n    }\r\n  }\r\n}\r\n\r\nexport const getIronDoors = (skip = 0, limit = 12) => {\r\n  return async dispatch => {\r\n    let response = await axios.get(`${domain}/doors?type=iron&skip=${skip}&limit=${limit}`, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    if (response.data.success) {\r\n      dispatch({ type: GET_IRON, payload: response.data })\r\n    }\r\n  }\r\n}\r\n\r\nexport const getDoors = () => {\r\n  return async dispatch => {\r\n    let response = await axios.get(`${domain}/doors`, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    if (response.data.success) {\r\n      dispatch({ type: GET_ALL, payload: response.data })\r\n    }\r\n  }\r\n}","import React, {useEffect, useState} from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport './Items.css'\r\nimport doors from '../doors'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {getInteriorDoors, getIronDoors} from '../store/actions/doorsAction'\r\n\r\nconst Items = (props) => {\r\n  const [ironDoor, setIronDoors] = useState({})\r\n  const [interiorDoor, setInteriorDoors] = useState({})\r\n\r\n\r\n  let iron = doors.filter(item => {\r\n    if (item.category === 'iron') {\r\n      return item\r\n    }\r\n  })\r\n  let interior = doors.filter(item => {\r\n    if (item.category === 'interior') {\r\n      return item\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    props.getInteriorDoors(0, 4)\r\n    props.getIronDoors(0, 4)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setIronDoors(props.doors.iron)\r\n    setInteriorDoors(props.doors.interior)\r\n  }, [props.doors])\r\n  console.log(props)\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2 className=\"prodHeader\"> Входные двери</h2>\r\n        <CardDeck>\r\n          {!ironDoor.length ? <h2>Loading...</h2> : (\r\n            <Row style={{width: '110%'}}>\r\n              {\r\n                ironDoor.map((res, index) => {\r\n                  return (<Col xs={6} md={3} key={index}>\r\n                      <Card>\r\n                        <div className=\"flip-box\">\r\n                          <div className=\"flip-box-inner\">\r\n                            <div className=\"flip-box-front\">\r\n                              <Card.Img variant=\"top\" src={res.frontImage}\r\n                                        style={{height: '100%'}}/>\r\n                            </div>\r\n                            <div className=\"flip-box-back\">\r\n                              <Card.Img variant=\"top\" src={res.backImage}\r\n                                        style={{height: '100%'}}/>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <Card.Body className=\"alignCenter\">\r\n                          <Card.Title>{res.title}</Card.Title>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                          <div className=\"text-muted alignCenter \">{res.price} <span>р.</span></div>\r\n                        </Card.Footer>\r\n                      </Card>\r\n                    </Col>\r\n                  )\r\n                })\r\n              }\r\n            </Row>\r\n          )}\r\n          <Button variant=\"info\" className=\"buttonCenter\"><Link to=\"catalogs/iron2\"\r\n                                                                style={{color: 'white', textDecoration: 'none'}}>увидеть\r\n            больше</Link></Button>\r\n        </CardDeck>\r\n        <h2 className=\"prodHeader\">Межкомнатные двери</h2>\r\n        <CardDeck>\r\n          {!interiorDoor.length ? <h2>Loading...</h2> : (\r\n            <Row>\r\n              {\r\n                interiorDoor.map((res, index) => {\r\n                  console.log(res)\r\n                  return (<Col xs={6} md={3} key={index}>\r\n                      <Card>\r\n                        <div className=\"flip-box\">\r\n                          <div className=\"flip-box-\">\r\n\r\n                            <div className=\"flip-box-\">\r\n                              <Card.Img variant=\"top\" src={res.frontImage}\r\n                                        style={{height: '100%'}}/>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <Card.Body className=\"alignCenter\">\r\n                          <Card.Title>{res.title}</Card.Title>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                          <div className=\"text-muted alignCenter \">{res.priceFront} <span>р.</span></div>\r\n                        </Card.Footer>\r\n                      </Card>\r\n                    </Col>\r\n                  )\r\n                })\r\n              }\r\n            </Row>\r\n          )}\r\n          <Button variant=\"info\" className=\"buttonCenter\"><Link to=\"catalogs/iron\"\r\n                                                                style={{color: 'white', textDecoration: 'none'}}>увидеть\r\n            больше</Link></Button>\r\n        </CardDeck>\r\n      </Container>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    doors: state.doors,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getInteriorDoors, getIronDoors})(Items)","import React,{useEffect,useState} from 'react'\r\nimport OwlCarousel from 'react-owl-carousel'\r\nimport 'owl.carousel/dist/assets/owl.carousel.css'\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css'\r\nimport './Brends.css'\r\n// import brends from '../data'\r\nimport { connect } from 'react-redux'\r\nimport { getHomePage } from \"../store/actions/layoutAction\";\r\n\r\nconst Brends = (props) => {\r\n  const [brend, setBrend] = useState([])\r\n  useEffect(() => {\r\n    props.getHomePage()\r\n    // setSlide(data.images.slideImages);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setBrend(props.layout.brend)\r\n  }, [props.layout])\r\n  const options = {\r\n    items: 6,\r\n    nav: false,\r\n    loop: true,\r\n    autoplay: true,\r\n    slideBy: 1,\r\n    dots: false,\r\n    smartSpeed: 1000,\r\n    responsive: {\r\n      0: {\r\n        items: 2,\r\n      },\r\n      300: {\r\n        items: 3,\r\n      },\r\n\r\n      600: {\r\n        items: 4,\r\n      },\r\n      1000: {\r\n        items: 6,\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"prodHeader\">Наши Партнеры</h2>\r\n      <p className='alignCenter'>Мы сотрудничаем только с проверенными брендами.</p>\r\n      <OwlCarousel className=\"owl-theme\" margin={70} {...options}>\r\n        {\r\n          brend.map((item, index) => {\r\n            return (\r\n              <div className=\"item\" key={index}>\r\n                <img\r\n                  src={item.url}\r\n                  alt=\"brands\" />\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </OwlCarousel>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    layout: state.layout,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getHomePage })(Brends)\r\n","import React from 'react'\r\nimport ControlledCarousel from './ControlledCarousel'\r\nimport About from './About'\r\nimport Items from './Items'\r\nimport Brends from './Brends'\r\nimport Footer from \"./Footer\";\r\n\r\nconst Landing = () => {\r\n  let style = {\r\n    marginTop: '56px',\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{...style}}>\r\n        <ControlledCarousel/>\r\n        <About/>\r\n        <Items/>\r\n        <Brends/>\r\n      </div>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Landing","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nconst Interior = ({ res }) => {\r\n  // console.log(res)\r\n  return (\r\n    <Col\r\n      xs={6}\r\n      md={3}\r\n    >\r\n      <Link to=\"/DoorDesc\">\r\n        <Card className=\"mb-5\">\r\n          <div className=\"flip-box fixed-item\">\r\n            <div className=\"flip-box-inner\">\r\n              {!!res.otherColor.length && (\r\n                <div className=\"flip-box-\">\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src={res.otherColor[0].image}\r\n                    style={{ height: '100%' }}\r\n                    alt={'a'}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <Card.Body className=\"alignCenter\">\r\n            <Card.Title style={{ color: 'grey', textDecoration: 'none' }}>{res.title}</Card.Title>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <div className=\"text-muted alignCenter \">\r\n              {/*{res.priceFront} <span>р.</span>*/}\r\n            </div>\r\n          </Card.Footer>\r\n        </Card>\r\n      </Link>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default Interior","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nconst Iron = ({res}) => {\r\n  return (\r\n    <Col\r\n      xs={6}\r\n      md={3}\r\n    >\r\n      <Link to=\"/DoorDesc\">\r\n        <Card className=\"mb-5\">\r\n          <div className=\"flip-box\">\r\n            <div className=\"flip-box-inner\">\r\n              <div className=\"flip-box-front\">\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src={res.frontImage}\r\n                  style={\r\n                    {\r\n                      height: '100%',\r\n                    }\r\n                  }\r\n                />\r\n              </div>\r\n              {res.otherColor.length && (\r\n                <div className=\"flip-box-back\">\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src={res.otherColor[0].image}\r\n                    style={{height: '100%'}}\r\n                    alt={'a'}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <Card.Body className=\"alignCenter\">\r\n            <Card.Title style={{color: 'grey', textDecoration: 'none'}}>{res.title}</Card.Title>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <div className=\"text-muted alignCenter \">\r\n              {res.price} <span>р.</span>\r\n            </div>\r\n          </Card.Footer>\r\n        </Card>\r\n      </Link>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default Iron","import React, { useEffect, useState } from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Footer from '../Components/Footer'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport Interior from './Interior'\r\nimport Iron from './Iron'\r\nimport './Catalogs.css'\r\nimport { connect } from 'react-redux'\r\nimport { getDoors } from '../store/actions/doorsAction'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    margin: '20px 0',\r\n  },\r\n}))\r\nconst Catalogs = props => {\r\n  const [ doors, setDoors ] = useState([])\r\n  const classes = useStyles()\r\n  let selectedCategory = 'interior'\r\n\r\n  useEffect(() => {\r\n    props.getDoors()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (props.location.pathname === '/catalogs/iron') {\r\n      selectedCategory = 'iron'\r\n    }\r\n\r\n    setDoors(props.doors.filter(item => item.category === selectedCategory))\r\n  }, [ props.doors ])\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2 className=\"headTop\">Каталог</h2>\r\n        <CardDeck>\r\n          {!doors.length ? (\r\n            <h2>Loading...</h2>\r\n          ) : (\r\n            <Row>\r\n              {doors.reverse().map((res, index) => {\r\n                if ('interior' === res.category) {\r\n                  return <Interior key={index} res={res}/>\r\n                }\r\n                return <Iron key={index} res={res}/>\r\n              })}\r\n            </Row>\r\n          )}\r\n        </CardDeck>\r\n        <div className={classes.root}>\r\n          <Pagination count={10} size=\"large\"/>\r\n        </div>\r\n      </Container>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    doors: state.doors,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getDoors })(Catalogs)\r\n","import {ADMIN_LOGIN, ADMIN_LOGOUT} from './types'\r\nimport axios from 'axios'\r\n\r\nconst domain = 'http://localhost:4000'\r\n\r\nexport const login = doc => {\r\n  return dispatch => {\r\n    axios({\r\n      method: 'POST',\r\n      url: `${domain}/admin/login`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: doc,\r\n    })\r\n      .then(data => {\r\n        dispatch(setAuthToken(data.data.token))\r\n        window.location.href = '/administrator'\r\n      })\r\n      .catch(e => console.log('Not Allowed'))\r\n  }\r\n}\r\n\r\nconst setAuthToken = token => {\r\n  return dispatch => {\r\n    if (token && token !== '') {\r\n      localStorage.setItem('a_a_key', token)\r\n      dispatch({type: ADMIN_LOGIN, payload: token})\r\n    } else {\r\n      console.log('Unauthorized')\r\n    }\r\n  }\r\n}\r\n\r\nexport const Init = () => {\r\n  return async dispatch => {\r\n    try {\r\n      const token = localStorage.getItem('a_a_key')\r\n      let verifyToken = await checkToken(token)\r\n      if (!verifyToken) {\r\n        dispatch(logout())\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      dispatch(logout())\r\n    }\r\n  }\r\n}\r\n\r\nconst checkToken = async token => {\r\n  try {\r\n    let response = await axios({\r\n      method: 'GET',\r\n      url: `${domain}/admin/jwt_check`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `${token}`,\r\n      },\r\n    })\r\n    const {data} = response\r\n    if (data.success) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  } catch (e) {\r\n    return false\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return dispatch => {\r\n    localStorage.removeItem('a_a_key')\r\n    dispatch({type: ADMIN_LOGOUT})\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Button from '@material-ui/core/Button'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport axios from 'axios'\r\n\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  createDoor,\r\n  updateDoor,\r\n  createDoorOtherColor, domain,\r\n} from '../store/actions/doorsAction'\r\nimport { Init } from '../store/actions/auhtAction'\r\nimport { getHomePage } from '../store/actions/layoutAction'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  mediaFront: {\r\n    height: 240,\r\n    width: '49%',\r\n    float: 'left',\r\n  },\r\n  mediaBack: {\r\n    height: 240,\r\n    width: '49%',\r\n    float: 'right',\r\n  },\r\n  mediaBackInterior: {\r\n    height: 240,\r\n    width: '49%',\r\n    float: 'none',\r\n    margin: '0 auto',\r\n  },\r\n\r\n  center: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    margin: '20px 0',\r\n  },\r\n})\r\nconst useStyle = makeStyles(() => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  save: {\r\n    float: 'right',\r\n  },\r\n  adminDoor: {\r\n    height: '200px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  adminBackDoor: {\r\n    height: '100px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  flex: {\r\n    display: 'flex',\r\n  },\r\n  flexDirection: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  flexBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  flexDirectionEnd: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-End',\r\n  },\r\n}))\r\n// selectedDoors\r\nconst Doors = (props) => {\r\n  const { selectedDoors } = props\r\n  const [ open, setOpen ] = useState(false)\r\n  const [ openInterior, setOpenInterior ] = useState(false)\r\n  const [ smallImage, setSmallImage ] = useState({})\r\n  const [ selectedDoor, setSelectedDoor ] = useState(null)\r\n\r\n  console.log('selected door', selectedDoor)\r\n\r\n  const classes = useStyles()\r\n  const classe = useStyle()\r\n\r\n  const handleClickOpen = (door) => {\r\n    setSelectedDoor(door)\r\n    setOpen(true)\r\n  }\r\n  const handleClickOpenInterior = (door) => {\r\n    setSelectedDoor(door)\r\n    setOpenInterior(true)\r\n  }\r\n\r\n  const onChangeFrontImage = async event => {\r\n    const data = new FormData()\r\n    data.append('img', event.target.files[0])\r\n    try {\r\n      const response = await axios.patch(`${domain}/doors/${selectedDoor._id}/image`, data, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        },\r\n      )\r\n      setSelectedDoor((selectedDoor) => ({\r\n        ...selectedDoor,\r\n        frontImage: response.data,\r\n      }))\r\n    } catch {\r\n    }\r\n  }\r\n\r\n  const onChange = event => {\r\n    event.persist()\r\n    const name = event.target.name\r\n    let addingValue\r\n    if ([ 'image', 'frontImage' ].includes(name)) {\r\n      addingValue = event.target.files[0]\r\n    } else {\r\n      addingValue = event.target.value\r\n    }\r\n\r\n    // wait for state last updated version, because state next version depends on prev version\r\n    setSelectedDoor(selectedDoor => ({\r\n      ...selectedDoor,\r\n      [name]: addingValue,\r\n    }))\r\n  }\r\n\r\n  const onLittleChange = (value, arrayName, name, index) => {\r\n    setSelectedDoor((selectedDoor) => {\r\n      const newArray = [ ...selectedDoor[arrayName] ]\r\n      const field = newArray[index]\r\n      field[name] = value\r\n\r\n      return {\r\n        ...selectedDoor,\r\n        [arrayName]: newArray,\r\n      }\r\n    })\r\n  }\r\n\r\n  // const onImagePick = e => {\r\n  //   setValue({\r\n  //     ...value,\r\n  //     img: e.target.files[0],\r\n  //   })\r\n  // }\r\n  // const onchange = event => {\r\n  //   setValue({\r\n  //     ...value,\r\n  //     [event.target.name]: event.target.value,\r\n  //   })\r\n  // }\r\n\r\n  const handleAddSmallImage = event => {\r\n    const name = event.target.name\r\n    let addingValue\r\n    if ('image' === name) {\r\n      addingValue = event.target.files[0]\r\n    } else {\r\n      addingValue = event.target.value\r\n    }\r\n\r\n    setSmallImage({\r\n      ...smallImage,\r\n      [name]: addingValue,\r\n    })\r\n  }\r\n\r\n  const handleSmallImageSave = () => {\r\n    props.createDoorOtherColor(selectedDoor._id, smallImage)\r\n    window.location.reload()\r\n  }\r\n\r\n  const handleSaveAndClose = async () => {\r\n    // let data = new FormData()\r\n    // Object.keys(selectedDoor).map(key => {\r\n    //   data.append(key, selectedDoor[key])\r\n    // })\r\n    let resp = await props.updateDoor(selectedDoor._id, selectedDoor)\r\n    if (resp.success) {\r\n      setOpen(false)\r\n      setOpenInterior(false)\r\n      window.location.reload()\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {!selectedDoors.length ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <>\r\n          <Grid container spacing={5}>\r\n            {selectedDoors.map((res, index) => {\r\n              return (\r\n                'interior' === res.category ?\r\n                  (\r\n                    <Grid item xs={6} md={3} lg={3} key={index}>\r\n                      <Card className={classes.root} onClick={() => handleClickOpenInterior(res)}>\r\n                        <CardActionArea>\r\n                          <CardMedia\r\n                            className={classes.mediaFront}\r\n                            image={res.frontImage}\r\n                          />\r\n                          <CardMedia\r\n                            className={classes.mediaBackInterior}\r\n                            image={res.otherColor === 'undefined' ? res.otherColor[0].image : null}\r\n                          />\r\n                          <div>\r\n                            <CardContent>\r\n                              <Typography variant=\"h5\" component=\"h3\">\r\n                                {res.title}\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </div>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                          <Typography component=\"p\">{res.priceFront} руб</Typography>\r\n                        </CardActions>\r\n                      </Card>\r\n                    </Grid>\r\n                  ) : (\r\n                    <Grid item xs={6} md={3} lg={3} key={index}>\r\n                      <Card className={classes.root} onClick={() => handleClickOpen(res)}>\r\n                        <CardActionArea>\r\n                          <CardMedia\r\n                            className={classes.mediaFront}\r\n                            image={res.frontImage}\r\n                          />\r\n                          <CardMedia\r\n                            className={classes.mediaBack}\r\n                            image={res.otherColor === 'undefined' ? res.otherColor[0].image : 'not found'}\r\n                          />\r\n                          <CardContent>\r\n                            <Typography variant=\"h5\" component=\"h3\">\r\n                              {res.title}\r\n                            </Typography>\r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                          <Typography component=\"p\">{res.price} руб</Typography>\r\n                        </CardActions>\r\n                      </Card>\r\n                    </Grid>\r\n                  )\r\n\r\n              )\r\n            })\r\n            }\r\n          </Grid>\r\n          <div className={classes.center}>\r\n            <Pagination count={10} size=\"large\"/>\r\n          </div>\r\n        </>\r\n      )}\r\n      <Dialog fullScreen open={open} onClose={() => {\r\n        setSmallImage({})\r\n        setOpen(false)\r\n      }}>\r\n        <AppBar className={classe.appBar}>\r\n          <Toolbar className={classe.flexBetween}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                setSmallImage({})\r\n                setOpen(false)\r\n              }}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon/>\r\n            </IconButton>\r\n            <Button autoFocus color=\"inherit\" onClick={handleSaveAndClose}>\r\n              САХРАНИТЬ\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {selectedDoor && (\r\n          <>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Дверь с наружи</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    alt=\"Remy Sharp\"\r\n                    src={selectedDoor.frontImage}\r\n                    className={classe.adminDoor}\r\n                  />\r\n                  <input type=\"file\" name=\"frontImage\" onChange={onChangeFrontImage}/>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Панель для входных дверей</th>\r\n                <th>Цена</th>\r\n                <th>Цвет</th>\r\n                <th>Сторона</th>\r\n                <th>Зарисовка</th>\r\n                <th>Опции</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input type=\"file\" name=\"image\" onChange={handleAddSmallImage}/>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" value={smallImage.price} name=\"price\" onChange={handleAddSmallImage}/>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" value={smallImage.color} name=\"color\" onChange={handleAddSmallImage}/>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" value={smallImage.side} name=\"side\" onChange={handleAddSmallImage}/>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" value={smallImage.picture} name=\"picture\" onChange={handleAddSmallImage}/>\r\n                </td>\r\n                <td>\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={handleSmallImageSave}>\r\n                    Добавить\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n              {selectedDoor.otherColor && selectedDoor.otherColor.map((res, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>\r\n                      <img\r\n                        alt=\"Remy Sharp\"\r\n                        src={res.image}\r\n                        className={classe.adminBackDoor}\r\n                      />\r\n                      {/*<input type=\"file\" name=\"littleImage\"*/}\r\n                      {/*       onChange={(event) => {*/}\r\n                      {/*         onLittleChange(event.target.value, 'otherColor', 'image', index)*/}\r\n                      {/*       }}*/}\r\n                      {/*/>*/}\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"littlePrice\"\r\n                        onChange={(event) => {\r\n                          onLittleChange(event.target.value, 'otherColor', 'price', index)\r\n                        }}\r\n                        defaultValue={res.price}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"littleColor\"\r\n                        onChange={(event) => {\r\n                          onLittleChange(event.target.value, 'otherColor', 'color', index)\r\n                        }}\r\n                        defaultValue={res.color}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"littleSide\"\r\n                        onChange={(event) => {\r\n                          onLittleChange(event.target.value, 'otherColor', 'side', index)\r\n                        }}\r\n                        defaultValue={res.side}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"LittlePicture\"\r\n                        onChange={(event) => {\r\n                          onLittleChange(event.target.value, 'otherColor', 'picture', index)\r\n                        }}\r\n                        defaultValue={res.picture}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <Button variant=\"contained\" color=\"secondary\">\r\n                        Удалить\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Производитель</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.manufacturer}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'manufacturer'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Имя</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td> Панель для входных дверей\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.title}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'title'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Размер дверного блока</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.doorBlockSize}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'doorBlockSize'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Серия</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.series}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'series'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Толщина полотна (мм)</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.metalSheetThickness}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'metalSheetThickness'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Толщина листа металла (мм.)</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.thickness}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'thickness'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Класс прочности</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.strengthClass}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'strengthClass'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Значение по эксплутационным характеристикам</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.performanceValue}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'performanceValue'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Класс устойчивости к взлому</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.burglarResistanceClass}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'burglarResistanceClass'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Количество петель</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.numberOfLoops}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'numberOfLoops'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Противосъемы</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.antiSeize}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'antiSeize'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Регулировка прижима</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.clipAdjustment}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'clipAdjustment'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Коробка</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.box}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'box'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Вылет наличника от короба</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.platbandDepartureFromTheBox}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Крепление</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.mount}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'mount'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Утеплитель</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.insulation}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'insulation'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Усиление замковой зоны</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.castleStrengthening}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'castleStrengthening'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Ночная задвижка</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.nightValve}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'nightValve'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Терморазрыв</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.thermalBreak}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'thermalBreak'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Цинкогрунт</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.zinkogrunt}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'zinkogrunt'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Вес двери</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.doorWeight}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'doorWeight'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Цена</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.price}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'price'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Дополнительные фото</th>\r\n                <th>Опции</th>\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input type=\"file\"/>\r\n                </td>\r\n                <td>\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Добавить\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n              {selectedDoor.moreImage && selectedDoor.moreImage.map((item, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>\r\n                      <img alt=\"Remy Sharp\" src={item.image} className={classe.adminDoor}/>\r\n                      <input type=\"file\" name=\"littleSlide\"\r\n                             onChange={(event) => {\r\n                               onLittleChange(event.target.value, 'moreImage', 'image', index)\r\n                             }}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })\r\n              }\r\n              </tbody>\r\n            </Table>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n      <Dialog fullScreen open={openInterior} onclose={() => {\r\n        setSmallImage({})\r\n        setOpenInterior(false)\r\n      }}>\r\n        <AppBar className={classe.appBar}>\r\n          <Toolbar className={classe.flexBetween}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                setSmallImage({})\r\n                setOpenInterior(false)\r\n              }}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon/>\r\n            </IconButton>\r\n            <Button autoFocus color=\"inherit\" onClick={handleSaveAndClose}>\r\n              САХРАНИТЬ\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {selectedDoor && (\r\n          <>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Дверь с наружи</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    alt=\"Remy Sharp\"\r\n                    src={selectedDoor.frontImage}\r\n                    className={classe.adminDoor}\r\n                  />\r\n                  <input type=\"file\" name=\"frontImage\"/>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Панель для межкомнотных дверей</th>\r\n                <th>Цвет</th>\r\n                <th>Опции</th>\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input type=\"file\" name=\"image\" onChange={handleAddSmallImage}/>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"color\" onChange={handleAddSmallImage}/>\r\n                </td>\r\n\r\n                <td>\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={handleSmallImageSave}>\r\n                    Добавить\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n              {selectedDoor.otherColor && selectedDoor.otherColor.map((res, index) => {\r\n\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>\r\n                      <img\r\n                        alt=\"Remy Sharp\"\r\n                        src={res.image}\r\n                        className={classe.adminBackDoor}\r\n                      />\r\n                      {/*<input type=\"file\" name=\"littleImage\"*/}\r\n                      {/*       onChange={(event) => {*/}\r\n                      {/*         onLittleChange(event.target.value, 'otherColor', 'image', index)*/}\r\n                      {/*       }}*/}\r\n                      {/*/>*/}\r\n                    </td>\r\n\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"littleColor\"\r\n                        onChange={(event) => {\r\n                          onLittleChange(event.target.value, 'otherColor', 'color', index)\r\n                        }}\r\n                        defaultValue={res.color}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <Button variant=\"contained\" color=\"secondary\">\r\n                        Удалить\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Производитель</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.manufacturer}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'manufacturer'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Имя</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.title}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'title'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Размер дверного блока</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.doorBlockSize}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'doorBlockSize'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Серия</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.series}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'series'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Внутреннее наполнение</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.inside}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'inside'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Покрытие</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.coating}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'coating'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Тип остекления</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.glazing}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'glazing'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Цена за полотно</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.priceFront}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'priceFront'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Цена за комплект</th>\r\n\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.fullPrice}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'fullPrice'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Дополнительные фото</th>\r\n                <th>Опции</th>\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input type=\"file\"/>\r\n                </td>\r\n                <td>\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Добавить\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n              {selectedDoor.moreImage && selectedDoor.moreImage.map((item, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>\r\n                      <img alt=\"Remy Sharp\" src={item.image} className={classe.adminDoor}/>\r\n                      <input type=\"file\" name=\"littleSlide\"\r\n                             onChange={(event) => {\r\n                               onLittleChange(event.target.value, 'moreImage', 'image', index)\r\n                             }}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })\r\n              }\r\n              </tbody>\r\n            </Table>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { Init, createDoor, updateDoor, createDoorOtherColor, getHomePage })(Doors)\r\n","import React, {useState, useEffect} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n// import Message from '../message'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {markAsSeen, getSeenMessages} from '../store/actions/messageAction'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: '#00A9F7',\r\n    position: 'absolute',\r\n    top: '43px',\r\n    right: '45px',\r\n  },\r\n}))\r\n\r\nconst Notification = (props) => {\r\n  const classes = useStyles()\r\n  const [checked, setChecked] = useState('')\r\n  const [messages, setMessages] = useState([])\r\n\r\n  useEffect(() => {\r\n    props.getSeenMessages()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setMessages(props.messages.seenMessages)\r\n  }, [props.messages.seenMessages])\r\n\r\n  const handleToggle = (id, event) => {\r\n    // console.log(id, [event.target])\r\n    // setChecked(value);\r\n    if (event.target.checked) {\r\n      props.markAsSeen(id)\r\n    }\r\n\r\n    event.target.checked = false\r\n  }\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {messages.map((value, index) => {\r\n        return (\r\n          <ListItem className=\"panel\" key={index} dense button>\r\n            <ListItemIcon>\r\n              <Checkbox onClick={(event) => handleToggle(value._id, event)}/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={` ${value.name} - ${value.phone}`}/>\r\n          </ListItem>\r\n        )\r\n      })}\r\n    </List>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    messages: state.messages,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getSeenMessages, markAsSeen})(\r\n  Notification,\r\n)\r\n","import React, { useState, useEffect } from \"react\";\r\n// import Message from '../message'\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getMessages, deleteMessage } from \"../store/actions/messageAction\";\r\n\r\nconst Orders = props => {\r\n  let [messages, setMessages] = useState([]);\r\n  // let [seenMessages,setSeenMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    props.getMessages();\r\n  }, []);\r\n  useEffect(() => {\r\n    setMessages(props.messages.messages);\r\n  }, [props.messages.messages]);\r\n\r\n  const onMessageDelete = async id => {\r\n    let resp = await props.deleteMessage(id);\r\n    if (resp.success) {\r\n      let messagesData = messages.filter(message => message._id !== id);\r\n      setMessages(messagesData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr className=\"text-light bg-dark\">\r\n            <th>Имя</th>\r\n            <th>Телефон</th>\r\n            <th>Удалить</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {messages.map((value, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>{value.name}</td>\r\n                <td>{value.phone}</td>\r\n                <td>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => onMessageDelete(value._id)}\r\n                  >\r\n                    Удалить\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    messages: state.messages\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getMessages, deleteMessage })(Orders);\r\n","import React, { useState, useEffect } from 'react'\r\n// import data from '../data'\r\nimport Button from '@material-ui/core/Button'\r\nimport Table from 'react-bootstrap/Table'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { updateSlider, addSlide, deleteSlide } from '../store/actions/layoutAction';\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  save: {\r\n    float: 'right',\r\n  },\r\n  adminDoor: {\r\n    height: '200px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  adminBackDoor: {\r\n    height: '100px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  flex: {\r\n    display: 'flex',\r\n  },\r\n  flexDirection: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  flexBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  flexDirectionEnd: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-End',\r\n  },\r\n  titleP: {\r\n    fontWeight: 'bold',\r\n  },\r\n}))\r\n\r\nconst AdminSlider = (props) => {\r\n  const [selectedDoor, setSelectedDoor] = useState(null)\r\n  const [slider, setSlider] = useState([]);\r\n  const [newSlide, setNewSlide] = useState();\r\n\r\n  useEffect(() => {\r\n    setSlider(props.layout.slider);\r\n  }, [props.layout.slider]);\r\n\r\n  // const onLittleChange = (value, arrayName, name, index) => {\r\n  //   setSelectedDoor(slider)\r\n  //   setSelectedDoor((selectedDoor) => {\r\n  //     const newArray = [...selectedDoor]\r\n  //     // console.log(newArray)\r\n  //     const field = newArray[index]\r\n  //     field[name] = value\r\n\r\n  //     return {\r\n  //       ...selectedDoor,\r\n  //       [arrayName]: newArray,\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  const onUpdateSlider = async (id) => {\r\n    await props.updateSlider(id, selectedDoor);\r\n  }\r\n\r\n  const onSlidePicker = async (e) => {\r\n    let img = new FormData();\r\n    img.append('img', e.target.files[0]);\r\n    setNewSlide(img);\r\n  }\r\n\r\n  const onNewSlideAdd = async () => {\r\n    if (newSlide) {\r\n      await props.addSlide(newSlide);\r\n    }\r\n  }\r\n  const onDeleteSlide = async (id) => {\r\n    let resp = await props.deleteSlide(id);\r\n  }\r\n\r\n  const onUpdatePicker = async (img) => {\r\n    let img_form = new FormData();\r\n    img_form.append('img', img)\r\n    setSelectedDoor(img_form);\r\n  }\r\n\r\n  const classe = useStyle()\r\n  return (\r\n    <>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr className=\"text-light bg-dark\">\r\n            <th>Дополнительные фото</th>\r\n            <th>Обнавить</th>\r\n            <th>Удалить</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <input type=\"file\" name=\"add_img\" onChange={onSlidePicker} />\r\n            </td>\r\n            <td>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={onNewSlideAdd}>\r\n                Добавить\r\n            </Button>\r\n            </td>\r\n          </tr>\r\n          {slider.map((item, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>\r\n                  <img\r\n                    alt=\"Remy Sharp\"\r\n                    src={item.url}\r\n                    className={classe.adminDoor}\r\n                  />\r\n                  <input type=\"file\" name=\"sliderImage\"\r\n                    onChange={(event) => {\r\n                      // onLittleChange(event.target.files[0], 'slideImages', 'name', index)\r\n                      onUpdatePicker(event.target.files[0])\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => onUpdateSlider(item._id)}>\r\n                    Обнавить\r\n                </Button>\r\n                </td>\r\n                <td>\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={() => onDeleteSlide(item._id)}>\r\n                    Удалить\r\n                </Button>\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = state => {\r\n  return { layout: state.layout }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { updateSlider, addSlide, deleteSlide })(AdminSlider)","import React, { useEffect, useState } from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport data from '../data'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { updateAboutImage } from '../store/actions/layoutAction';\r\n\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  save: {\r\n    float: 'right',\r\n  },\r\n  adminDoor: {\r\n    height: '200px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  adminBackDoor: {\r\n    height: '100px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  flex: {\r\n    display: 'flex',\r\n  },\r\n  flexDirection: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  flexBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  flexDirectionEnd: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-End',\r\n  },\r\n  titleP: {\r\n    fontWeight: 'bold',\r\n  },\r\n}))\r\nconst AboutAdmin = (props) => {\r\n\r\n  let [img, setImg] = useState('');\r\n  useEffect(() => {\r\n    setImg(props.layout.about_image)\r\n  }, [])\r\n  useEffect(() => {\r\n    setImg(props.layout.about_image)\r\n  }, [props.layout.about_image])\r\n  const classe = useStyle()\r\n\r\n  const onChange = async (e) => {\r\n    setImg(\r\n      e.target.files[0]\r\n    );\r\n  }\r\n\r\n  const sendImage = async () => {\r\n    let new_img = new FormData();\r\n    new_img.append(\"img\", img);\r\n    await props.updateAboutImage(new_img)\r\n  }\r\n  return (\r\n    <>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr className=\"text-light bg-dark\">\r\n            <th>Имя</th>\r\n            <th>Обнавить</th>\r\n            <th>Удалить</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <img\r\n                alt=\"Remy Sharp\"\r\n                src={img}\r\n                className={classe.adminDoor}\r\n              />\r\n              <input type=\"file\" name=\"img\" onChange={onChange} />\r\n            </td>\r\n            <td>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={sendImage}>\r\n                Обнавить\r\n            </Button>\r\n            </td>\r\n            <td>\r\n              <Button variant=\"contained\" color=\"secondary\">\r\n                Удалить\r\n            </Button>\r\n            </td>\r\n          </tr>\r\n\r\n\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    layout: state.layout\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { updateAboutImage })(AboutAdmin)\r\n","import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport brends from '../data'\r\nimport Table from 'react-bootstrap/Table'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { updateBrend, addBrend, deleteBrend } from '../store/actions/layoutAction';\r\n\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  save: {\r\n    float: 'right',\r\n  },\r\n  adminDoor: {\r\n    height: '200px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  adminBackDoor: {\r\n    height: '100px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  flex: {\r\n    display: 'flex',\r\n  },\r\n  flexDirection: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  flexBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  flexDirectionEnd: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-End',\r\n  },\r\n  titleP: {\r\n    fontWeight: 'bold',\r\n  },\r\n}))\r\n\r\n\r\nconst AdminBrends = (props) => {\r\n  const [selectedDoor, setSelectedDoor] = useState(null)\r\n  const [brend, setBrend] = useState([]);\r\n  const [newBrend, setNewBrend] = useState();\r\n\r\n  useEffect(() => {\r\n    setBrend(props.layout.brend);\r\n  }, [props.layout.brend]);\r\n\r\n  // const onLittleChange = (value, arrayName, name, index) => {\r\n  //   setSelectedDoor(brends.images.slideBrends)\r\n  //   setSelectedDoor((selectedDoor) => {\r\n  //     const newArray = [...selectedDoor]\r\n  //     console.log(newArray)\r\n  //     const field = newArray[index]\r\n  //     field[name] = value\r\n\r\n  //     return {\r\n  //       ...selectedDoor,\r\n  //       [arrayName]: newArray,\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n\r\n  const onUpdateBrend = async (id) => {\r\n    await props.updateBrend(id, selectedDoor);\r\n  }\r\n\r\n  const onBrendPicker = async (e) => {\r\n    let img = new FormData();\r\n    img.append('img', e.target.files[0]);\r\n    setNewBrend(img);\r\n  }\r\n\r\n  const onNewBrendAdd = async () => {\r\n    if (newBrend) {\r\n      await props.addBrend(newBrend);\r\n    }\r\n  }\r\n  const onDeleteBrend = async (id) => {\r\n    await props.deleteBrend(id);\r\n  }\r\n\r\n  const onUpdatePicker = async (img) => {\r\n    let img_form = new FormData();\r\n    img_form.append('img', img)\r\n    setSelectedDoor(img_form);\r\n  }\r\n  const classe = useStyle()\r\n  return (\r\n    <>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr className=\"text-light bg-dark\">\r\n            <th>Дополнительные фото</th>\r\n            <th>Обнавить</th>\r\n            <th>Удалить</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <input type=\"file\" name=\"add_img\" onChange={onBrendPicker} />\r\n            </td>\r\n            <td>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={onNewBrendAdd}>\r\n                Добавить\r\n            </Button>\r\n            </td>\r\n          </tr>\r\n          {brend.map((item, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>\r\n                  <img\r\n                    alt=\"Remy Sharp\"\r\n                    src={item.url}\r\n                    className={classe.adminDoor}\r\n                  />\r\n                  <input type=\"file\" name=\"sliderImage\"\r\n                    onChange={(event) => {\r\n                      // onLittleChange(event.target.value, 'slideBrends', 'name', index)\r\n                      onUpdatePicker(event.target.files[0])\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => onUpdateBrend(item._id)}>\r\n                    Обнавить\r\n                </Button>\r\n                </td>\r\n                <td>\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={() => onDeleteBrend(item._id)}>\r\n                    Удалить\r\n                </Button>\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    layout: state.layout\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateBrend, addBrend, deleteBrend })(AdminBrends)","import React, { useState, useEffect } from 'react'\r\nimport clsx from 'clsx'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Box from '@material-ui/core/Box'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport List from '@material-ui/core/List'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport Doors from './Doors'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Button from '@material-ui/core/Button'\r\nimport { connect } from 'react-redux'\r\nimport { Init } from '../store/actions/auhtAction'\r\nimport Notification from './Notification'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport { createDoor, getDoors } from '../store/actions/doorsAction'\r\nimport { getHomePage } from '../store/actions/layoutAction'\r\nimport doors from '../doors'\r\nimport Orders from './Orders'\r\nimport AdminSlider from './AdminSlider'\r\nimport AboutAdmin from './AboutAdmin'\r\nimport AdminBrends from './AdminBrends'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n    width: '100%',\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([ 'width', 'margin' ], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([ 'width', 'margin' ], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  center: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    margin: '20px 0',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  addButton: {\r\n    float: 'right',\r\n    marginBottom: '20px',\r\n  },\r\n}))\r\n\r\nconst useStyless = makeStyles(theme => ({\r\n  root: {\r\n    height: 180,\r\n  },\r\n\r\n  paper: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  svg: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  polygon: {\r\n    fill: theme.palette.common.white,\r\n    stroke: theme.palette.divider,\r\n    strokeWidth: 1,\r\n  },\r\n}))\r\n\r\nfunction Dashboard(props) {\r\n  if (!localStorage.getItem('a_a_key')) {\r\n    window.location.href = '/Signin'\r\n  }\r\n\r\n  const [ doorType, setDoorType ] = useState('iron')\r\n  // one of doors, orders, slider\r\n  const [ collection, setCollection ] = useState([])\r\n  const [ activeMenu, setActiveMenu ] = useState('doors')\r\n\r\n  const [ open, setOpen ] = useState(true)\r\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [ checked, setChecked ] = useState(false)\r\n  const [ modalShow, setModalShow ] = useState(false)\r\n  const classes = useStyles()\r\n\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Body>\r\n          <h4>Добавить дверьи</h4>\r\n          <div>\r\n            <Link to=\"/createDoor/iron\" style={{\r\n              width: '45%',\r\n              margin: '2%',\r\n            }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.addButton}\r\n                style={{ float: 'none' }}\r\n              >\r\n                Входные\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/createDoor/interior\" style={{\r\n              width: '45%',\r\n              margin: '2%',\r\n            }}>\r\n              <Button\r\n                style={{ float: 'none' }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.addButton}\r\n              >\r\n                Межкомнатные\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.getHomePage()\r\n    props.getDoors()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setCollection(props.doors)\r\n  }, [ props.doors ])\r\n\r\n  const menus = {\r\n    doors: <Doors selectedDoors={collection.filter(({ category }) => category === doorType)}/>,\r\n    orders: <Orders/>,\r\n    slider: <AdminSlider/>,\r\n    about: <AboutAdmin/>,\r\n    brends: <AdminBrends/>,\r\n  }\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleChange = () => {\r\n    setChecked(prev => !prev)\r\n  }\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\r\n  const notificationStyle = {\r\n    display: checked ? 'block' : 'none',\r\n  }\r\n\r\n  function handleCloseInsert() {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <CssBaseline/>\r\n        <AppBar\r\n          position=\"absolute\"\r\n          className={clsx(classes.appBar, open && classes.appBarShift)}\r\n        >\r\n          <Toolbar className={classes.toolbar}>\r\n            <>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                className={clsx(\r\n                  classes.menuButton,\r\n                  open && classes.menuButtonHidden,\r\n                )}\r\n              >\r\n                <MenuIcon/>\r\n              </IconButton>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap\r\n                className={classes.title}\r\n              >\r\n                ПАНЕЛЬ АДМИНИСТРАТОРА\r\n              </Typography>\r\n\r\n              <FormControlLabel\r\n                control={\r\n                  <IconButton color=\"inherit\" onClick={handleChange}>\r\n                    <Badge badgeContent={props.messages.seenMessages.length} color=\"secondary\">\r\n                      <NotificationsIcon/>\r\n                    </Badge>\r\n                  </IconButton>\r\n                }\r\n              />\r\n              <div style={notificationStyle}>\r\n                <Notification/>\r\n              </div>\r\n            </>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <Divider/>\r\n          <List>\r\n            <div>\r\n              <ListItem button onClick={() => {\r\n                setDoorType('iron')\r\n                setActiveMenu('doors')\r\n              }}>\r\n                <ListItemText primary=\"Входная дверь\"/>\r\n              </ListItem>\r\n              <ListItem button onClick={() => {\r\n                setDoorType('interior')\r\n                setActiveMenu('doors')\r\n              }}>\r\n                <ListItemText primary=\"Межкомнатная дверь\"/>\r\n              </ListItem>\r\n              <ListItem button onClick={() => {\r\n                setActiveMenu('orders')\r\n              }}>\r\n                <ListItemText primary=\"Заказы\"/>\r\n              </ListItem>\r\n              <ListItem button onClick={() => {\r\n                setActiveMenu('slider')\r\n              }}>\r\n                <ListItemText primary=\"Слайдер\"/>\r\n              </ListItem>\r\n              <ListItem button onClick={() => {\r\n                setActiveMenu('about')\r\n              }}>\r\n                <ListItemText primary=\"О Нас\"/>\r\n              </ListItem>\r\n              <ListItem button onClick={() => {\r\n                setActiveMenu('brends')\r\n              }}>\r\n                <ListItemText primary=\"Бренды\"/>\r\n              </ListItem>\r\n              <ListItem button>\r\n                <Link to={'/logout'}>Logout</Link>\r\n              </ListItem>\r\n            </div>\r\n          </List>\r\n          <Divider/>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer}/>\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <ButtonToolbar>\r\n              <Button\r\n                onClick={() => setModalShow(true)}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.addButton}\r\n              >\r\n                Добавить\r\n              </Button>\r\n\r\n              <MyVerticallyCenteredModal\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n              />\r\n            </ButtonToolbar>\r\n\r\n            {menus[activeMenu]}\r\n            <Box pt={4}/>\r\n            {/*<div className={classes.center}>*/}\r\n            {/*  <Pagination count={10} size=\"large\"/>*/}\r\n            {/*</div>*/}\r\n          </Container>\r\n        </main>\r\n      </div>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n    messages: state.messages,\r\n    doors: state.doors,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { Init, createDoor, getHomePage, getDoors })(Dashboard)\r\n","import React, {useState} from 'react'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Link from '@material-ui/core/Link'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport axios from 'axios'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../store/actions/auhtAction'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nfunction SignIn(props) {\r\n  if (localStorage.getItem('a_a_key')) {\r\n    window.location.href = '/administrator'\r\n  }\r\n  const [input, setInput] = useState({\r\n    login: '',\r\n    password: '',\r\n  })\r\n\r\n  const onChange = event => {\r\n    setInput({\r\n      ...input,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n\r\n  const onSubmit = async event => {\r\n    event.preventDefault()\r\n    props.login({\r\n      login: input.login,\r\n      password: input.password,\r\n    })\r\n  }\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline/>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Login\"\r\n            name=\"login\"\r\n            autoComplete=\"false\"\r\n            autoFocus\r\n            value={input.email}\r\n            onChange={onChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={input.password}\r\n            onChange={onChange}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}></Box>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default connect(null, {login})(SignIn)\r\n","import React from 'react'\r\nimport {Row} from 'react-bootstrap'\r\nimport Col from 'react-bootstrap/Col'\r\nimport OwlCarousel from 'react-owl-carousel'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nconst InteriorDesc = ({door, onClick, backContent, info, slide, style, itemImg, item, options}) => {\r\n  return (\r\n    <Container style={backContent}>\r\n      <h2 className={'header'}>{door.title}</h2>\r\n      <Row>\r\n        <Col xs={12} md={6}>\r\n          <div className=\"leftSide\">\r\n            <div className=\"image\">\r\n              <div className=\"frontDoor\">\r\n                <img src={info.image} alt=\"\"/>\r\n              </div>\r\n              <div className=\"doorParagraph\">\r\n                <p>Цвет: {info.color}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <div className=\"price\">\r\n            <div className=\"rightSection\">\r\n              <p>Цена за полотно</p>\r\n              <p className=\"lastP\">{Number(door.priceFront)} РУБ. </p>\r\n            </div>\r\n            <div className=\"rightSection\">\r\n              <p>Цена за комплект</p>\r\n              <p className=\"lastP\">{Number(door.priceFront) + Number(door.fullPrice)} РУБ. </p>\r\n              <p className=\"lastP1\">В комплект входит полотно, коробка, с двух сторон наличники</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"littleDoors\">\r\n            {\r\n              door.otherColor.map((item, index) => {\r\n                return (\r\n                  <div className={`little ${style.active === index ? 'littleChose' : ''} `}\r\n                       onClick={() => onClick(index, item)}\r\n                       key={index}>\r\n                    <img src={item.image} alt=\"\"/>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </Col>\r\n        <Col xs={12} md={12}>\r\n          {slide.length && (\r\n            <>\r\n              <p className=\"moreSlide\">Дополнительные фотографии</p>\r\n              <OwlCarousel className=\"owl-theme\" margin={70} {...options}>\r\n                {\r\n                  slide.map((res, index) => {\r\n                    return (\r\n                      <div className=\"item\" style={item} key={index}>\r\n                        <img alt=\"\" src={res.image} style={{itemImg}}/>\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n              </OwlCarousel>\r\n            </>\r\n          )}\r\n        </Col>\r\n        <Col xs={12} md={12}>\r\n          <Table striped bordered hover className=\"descTable\">\r\n            <tbody>\r\n            <tr>\r\n              <td>\r\n                <p>Производитель</p>\r\n              </td>\r\n              <td>\r\n                {door.manufacturer}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Размер дверного блока</p>\r\n              </td>\r\n              <td>\r\n                {door.doorBlockSize}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Серия</p>\r\n              </td>\r\n              <td>\r\n                {door.series}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Внутреннее наполнение</p>\r\n              </td>\r\n              <td>\r\n                {door.inside}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Покрытие</p>\r\n              </td>\r\n              <td>\r\n                {door.coating}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Тип остекления</p>\r\n              </td>\r\n              <td>\r\n                {door.glazing}\r\n              </td>\r\n            </tr>\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default InteriorDesc","import React from 'react'\r\nimport {Row} from 'react-bootstrap'\r\nimport Col from 'react-bootstrap/Col'\r\nimport OwlCarousel from 'react-owl-carousel'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nconst IronDesc = ({door, onClick, backContent, info, slide, style, itemImg, item, options}) => {\r\n  console.log('door', door)\r\n\r\n  return (\r\n    <Container style={backContent}>\r\n      <h2 className={'header'}>{door.title}</h2>\r\n      <Row>\r\n        <Col xs={12} md={6}>\r\n          <div className=\"leftSide\">\r\n            <div className=\"image\">\r\n              <div className=\"frontDoor\">\r\n                <img src={door.frontImage} alt=\"\"/>\r\n              </div>\r\n              <div className=\"doorParagraph\">\r\n                <p>{door.side}</p>\r\n                <p>Цвет: {door.frontColor}</p>\r\n                <p>Рисунок: {door.picture}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"image\">\r\n              <div className=\"frontDoor\">\r\n                <img src={info.image} alt=\"\"/>\r\n              </div>\r\n              <div className=\"doorParagraph\">\r\n                <p>{info.side}</p>\r\n                <p>Цвет: {info.color}</p>\r\n                <p>Рисунок: {info.picture}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <div className=\"price\">\r\n            <div className=\"rightSection\">\r\n              <p>Цена</p>\r\n              <p className=\"lastP\">{Number(door.price) + Number(info.price)} РУБ. </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"littleDoors\">\r\n            {door.otherColor.map((item, index) => {\r\n              return (\r\n                <div className={`little ${style.active === index ? 'littleChose' : ''} `}\r\n                     onClick={() => onClick(index, item)}\r\n                     key={index}>\r\n                  <img src={item.image} alt=\"\"/>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </Col>\r\n        <Col xs={12} md={12}>\r\n          {slide.length && (\r\n            <>\r\n              <p className=\"moreSlide\">Дополнительные фотографии</p>\r\n              <OwlCarousel className=\"owl-theme\" margin={70} {...options}>\r\n                {\r\n                  slide.map((res, index) => {\r\n                    return (\r\n                      <div style={item} className=\"item\" key={index}>\r\n                        <img alt=\"\" src={res.image} style={{itemImg}}/>\r\n                      </div>\r\n\r\n                    )\r\n                  })\r\n                }\r\n              </OwlCarousel>\r\n            </>\r\n          )}\r\n        </Col>\r\n        <Col xs={12} md={12}>\r\n          <Table striped bordered hover className=\"descTable\">\r\n            <tbody>\r\n            <tr>\r\n              <td>\r\n                <p>Производитель</p>\r\n              </td>\r\n              <td>\r\n                {door.manufacturer}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Размер дверного блока</p>\r\n              </td>\r\n              <td>\r\n                {door.doorBlockSize}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Серия</p>\r\n              </td>\r\n              <td>\r\n                {door.series}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Толщина полотна мм.</p>\r\n              </td>\r\n              <td>\r\n                {door.thickness}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Толщина листа металла мм.</p>\r\n              </td>\r\n              <td>\r\n                {door.metalSheetThickness}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Класс прочности</p>\r\n              </td>\r\n              <td>\r\n                {door.strengthClass}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Значение по эксплутационным характеристикам</p>\r\n              </td>\r\n              <td>\r\n                {door.performanceValue}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Класс устойчивости к взлому</p>\r\n              </td>\r\n              <td>\r\n                {door.burglarResistanceClass}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Количество петель</p>\r\n              </td>\r\n              <td>\r\n                {door.numberOfLoops}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Противосъемы</p>\r\n              </td>\r\n              <td>\r\n                {door.antiSeize}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Регулировка прижима</p>\r\n              </td>\r\n              <td>\r\n                {door.clipAdjustment}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Короб</p>\r\n              </td>\r\n              <td>\r\n                {door.box}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Вылет наличника от короба</p>\r\n              </td>\r\n              <td>\r\n                {door.platbandDepartureFromTheBox}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Крепление</p>\r\n              </td>\r\n              <td>\r\n                {door.mount}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Утеплитель</p>\r\n              </td>\r\n              <td>\r\n                {door.insulation}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Усиление замковой зоны</p>\r\n              </td>\r\n              <td>\r\n                {door.castleStrengthening}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Ночная задвижка</p>\r\n              </td>\r\n              <td>\r\n                {door.nightValve}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Терморазрыв</p>\r\n              </td>\r\n              <td>\r\n                {door.thermalBreak}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Цинкогрунт</p>\r\n              </td>\r\n              <td>\r\n                {door.zinkogrunt}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <p>Вес двери</p>\r\n              </td>\r\n              <td>\r\n                {door.doorWeight}\r\n              </td>\r\n            </tr>\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default IronDesc","import React, {useEffect, useState} from 'react'\r\nimport allDoors from '../doors'\r\nimport './DoorDesc.css'\r\nimport Footer from '../Components/Footer'\r\nimport 'owl.carousel/dist/assets/owl.carousel.css'\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css'\r\nimport slideImage from '../doors'\r\nimport InteriorDesc from './InteriorDesc'\r\nimport IronDesc from './IronDesc'\r\n\r\nconst DoorDesc = () => {\r\n  const [selectedDoor, setSelectedDoor] = useState(allDoors[0])\r\n  const [style, setStyle] = useState({\r\n    active: 0,\r\n  })\r\n  const [info, setInfo] = useState({\r\n    image: selectedDoor.otherColor[0].image,\r\n    price: selectedDoor.otherColor[0].price,\r\n    side: selectedDoor.otherColor[0].side,\r\n    color: selectedDoor.otherColor[0].color,\r\n    picture: selectedDoor.otherColor[0].picture,\r\n  })\r\n  const [slide, setSlide] = useState([])\r\n  let slider = slideImage[0].moreImage.map(item => {\r\n    return item\r\n  })\r\n  useEffect(() => {\r\n    setSlide(slideImage[0].moreImage)\r\n  }, [])\r\n\r\n  const options = {\r\n    items: 4,\r\n    nav: false,\r\n    loop: true,\r\n    autoplay: true,\r\n    slideBy: 1,\r\n    dots: false,\r\n    smartSpeed: 1000,\r\n  }\r\n  const back = {\r\n    background: '#EDEDED',\r\n    position: 'absolute',\r\n    width: '100%',\r\n  }\r\n  const backContent = {\r\n    background: 'white',\r\n    marginTop: '100px',\r\n    paddingBottom: '50px',\r\n  }\r\n  const item = {\r\n    height: '200px',\r\n    width: '100px',\r\n    margin: '20px 70px',\r\n  }\r\n  const itemImg = {\r\n    height: '100%',\r\n  }\r\n  const handleClick = (index) => {\r\n    setStyle({\r\n      active: index,\r\n    })\r\n  }\r\n  const getInfo = (item) => {\r\n    setInfo({\r\n      image: item.image,\r\n      price: item.price,\r\n      side: item.side,\r\n      color: item.color,\r\n      picture: item.picture,\r\n    })\r\n  }\r\n  const onClick = (index, item) => {\r\n    handleClick(index)\r\n    getInfo(item)\r\n  }\r\n\r\n  return (\r\n    <div style={back}>\r\n      {('interior' === selectedDoor.category) ?\r\n        <InteriorDesc\r\n          door={selectedDoor}\r\n          onClick={onClick}\r\n          backContent={backContent}\r\n          info={info}\r\n          slide={slide}\r\n          style={style}\r\n          itemImg={itemImg}\r\n          // slider={slider}\r\n          item={item}\r\n          options={options}\r\n        />\r\n        : <IronDesc\r\n          door={selectedDoor}\r\n          onClick={onClick}\r\n          backContent={backContent}\r\n          info={info}\r\n          slide={slide}\r\n          style={style}\r\n          itemImg={itemImg}\r\n          // slider={slider}\r\n          item={item}\r\n          options={options}\r\n        />}\r\n      <Footer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DoorDesc\r\n","import React, {useEffect, useState} from 'react'\r\nimport {HashRouter, Route, Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {Init} from '../store/actions/auhtAction'\r\n\r\nfunction PrivateRoute({component, auth, Init, ...rest}) {\r\n  let [isAuthenticated, setIsAuthenticated] = useState(false)\r\n  // useEffect(() => {\r\n  //   Init();\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   setIsAuthenticated(auth.token);\r\n  // }, [auth.token]);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        auth.token ? (\r\n          React.createElement(component, props)\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/SignIn',\r\n              // state: {\r\n              //   from: props.location\r\n              // }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {auth: state.auth}\r\n}\r\n\r\nexport default connect(mapStateToProps, {Init})(PrivateRoute)\r\n","import { ADMIN_LOGIN, ADMIN_LOGOUT } from '../actions/types'\r\n\r\nconst initialState = {\r\n  token: null,\r\n  isAuthenticated: false,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADMIN_LOGIN:\r\n      return {\r\n        ...state,\r\n        token: action.payload,\r\n        isAuthenticated: true,\r\n      }\r\n    case ADMIN_LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { HOMEPAGE_DATA, UPDATE_ABOUT_IMG, UPDATE_BREND, DELETE_BREND, ADD_BREND, UPDATE_SLIDER, ADD_SLIDE, DELETE_SLIDE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  slider: [],\r\n  brend: [],\r\n  about_image: ''\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case HOMEPAGE_DATA:\r\n      return {\r\n        ...state,\r\n        slider: action.payload.slider,\r\n        brend: action.payload.brend,\r\n        about_image: action.payload.about_image\r\n      };\r\n    case UPDATE_ABOUT_IMG:\r\n      return {\r\n        ...state,\r\n        about_image: action.payload.data.about_img\r\n      }\r\n    case ADD_SLIDE:\r\n      return {\r\n        ...state,\r\n        slider: action.payload.data.slider\r\n      }\r\n    case UPDATE_SLIDER:\r\n      return {\r\n        ...state,\r\n        slider: action.payload.data.slider\r\n      }\r\n    case DELETE_SLIDE:\r\n      return {\r\n        ...state,\r\n        slider: action.payload.data.slider\r\n      }\r\n    case ADD_BREND:\r\n      return {\r\n        ...state,\r\n        brend: action.payload.data.brend\r\n      }\r\n    case UPDATE_BREND:\r\n      return {\r\n        ...state,\r\n        brend: action.payload.data.brend\r\n      }\r\n    case DELETE_BREND:\r\n      return {\r\n        ...state,\r\n        brend: action.payload.data.brend\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  MESSAGE_SEND,\r\n  GET_MESSAGES,\r\n  GET_SEEN_MESSAGES,\r\n  DELETE_MESSAGE,\r\n  MARK_AS_SEEN,\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n  messages: [],\r\n  seenMessages: [],\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case MESSAGE_SEND:\r\n      return {\r\n        ...state,\r\n      }\r\n    case GET_MESSAGES:\r\n      return {\r\n        ...state,\r\n        messages: action.payload.data,\r\n      }\r\n    case GET_SEEN_MESSAGES:\r\n      return {\r\n        ...state,\r\n        seenMessages: action.payload.data,\r\n      }\r\n    case MARK_AS_SEEN:\r\n      return {\r\n        ...state,\r\n        seenMessages: state.seenMessages.filter(\r\n          msg => msg._id !== action.payload.data._id,\r\n        ),\r\n        messages: [\r\n          ...state.messages,\r\n          action.payload.data,\r\n        ],\r\n      }\r\n    // case DELETE_MESSAGE:\r\n    //   return{\r\n\r\n    //   }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {GET_INTERIOR, GET_IRON, GET_ALL, UPDATE_DOOR} from '../actions/types'\r\n\r\nconst initialState = []\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    // case GET_INTERIOR:\r\n    //   return {\r\n    //     ...state,\r\n    //     interior: action.payload.data,\r\n    //   }\r\n    // case GET_IRON:\r\n    //   return {\r\n    //     ...state,\r\n    //     iron: action.payload.data,\r\n    //   }\r\n    case GET_ALL:\r\n      return action.payload.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { combineReducers } from \"redux\";\r\nimport authReducer from \"./reducers/authReducer\";\r\nimport layoutReducer from \"./reducers/layoutReducer\";\r\nimport messageReducer from \"./reducers/messageReducer\";\r\nimport doorsReducer from \"./reducers/doorsReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  layout: layoutReducer,\r\n  messages: messageReducer,\r\n  doors: doorsReducer\r\n});\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, {useEffect, useState} from 'react'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Button from '@material-ui/core/Button'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Form} from 'react-bootstrap'\r\nimport Col from 'react-bootstrap/Col'\r\nimport allDoors from '../doors'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {connect} from 'react-redux'\r\nimport {Init} from '../store/actions/auhtAction'\r\nimport {createDoor} from '../store/actions/doorsAction'\r\nimport {getHomePage} from '../store/actions/layoutAction'\r\nimport {Link, Redirect} from 'react-router-dom'\r\n\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  save: {\r\n    float: 'right',\r\n  },\r\n  adminDoor: {\r\n    height: '200px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  adminBackDoor: {\r\n    height: '100px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  flex: {\r\n    display: 'flex',\r\n  },\r\n  flexDirection: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  flexBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  flexDirectionEnd: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-End',\r\n  },\r\n  titleP: {\r\n    fontWeight: 'bold',\r\n  },\r\n}))\r\n\r\n\r\nconst CreateDoor = (props) => {\r\n  const [doorType, setDoorType] = useState('iron')\r\n  const [value, setValue] = useState({})\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const classe = useStyle()\r\n  useEffect(() => {\r\n    if (window.location.pathname === '/createDoor/iron') {\r\n      setDoorType('iron')\r\n    } else {\r\n      setDoorType('interior')\r\n    }\r\n  }, [])\r\n  const onchange = event => {\r\n    setValue({\r\n      ...value,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n  const onImagePick = e => {\r\n    setValue({\r\n      ...value,\r\n      img: e.target.files[0],\r\n    })\r\n  }\r\n\r\n  const handleClose = async () => {\r\n    let img = new FormData()\r\n    img.append('img', value.img)\r\n    img.append('category', doorType)\r\n    delete value.img\r\n    Object.keys(value).map(key => {\r\n      img.append(key, value[key])\r\n    })\r\n    let resp = await props.createDoor(img, value)\r\n    if (resp.success) {\r\n      // setOpenInsertInterior(false)\r\n    }\r\n  }\r\n\r\n\r\n  const handleCloseInsert = () => {\r\n    Redirect('/administrator')\r\n  }\r\n  return (\r\n    <>\r\n      {'iron' === doorType ?\r\n        (\r\n          <>\r\n            <AppBar className={classe.appBar}>\r\n              <Toolbar className={classe.flexBetween}>\r\n                <Link\r\n                  to={{\r\n                    pathname: '/administrator',\r\n                  }}\r\n                >\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    // onClick={handleCloseInsert}\r\n                    aria-label=\"close\"\r\n                  >\r\n                    <CloseIcon/>\r\n                  </IconButton>\r\n                </Link>\r\n                <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n                  САХРАНИТЬ\r\n                </Button>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <Table striped bordered hover>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label className={classe.titleP}>Категория</Form.Label>\r\n                    <Form.Control as=\"select\" name=\"category\" onChange={onchange} disabled>\r\n                      <option name=\"iron\">Входная</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Загрузить переднее фото</p>\r\n                  <input type=\"file\" name=\"frontImage\" onChange={onImagePick}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Цвет передней двери</p>\r\n                  <input type=\"text\" name=\"frontColor\" value={value.frontColor} onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Сторона двери</p>\r\n                  <input type=\"text\" name=\"side\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Зарисовка двери</p>\r\n                  <input type=\"text\" name=\"picture\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <p className={classe.titleP}>Производитель</p>\r\n                  <input type=\"text\" name=\"manufacturer\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Имя</p>\r\n                  <input type=\"text\" name=\"title\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Размер дверного блока</p>\r\n                  <input type=\"text\" name=\"doorBlockSize\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Серия</p>\r\n                  <input type=\"text\" name=\"series\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Толщина полотна (мм)</p>\r\n                  <input type=\"text\" name=\"thickness\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <p className={classe.titleP}>Толщина листа металла (мм.)</p>\r\n                  <input type=\"text\" name=\"metalSheetThickness\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Класс прочности</p>\r\n                  <input type=\"text\" name=\"strengthClass\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>\r\n                    Значение по эксплутационным характеристикам\r\n                  </p>\r\n                  <input type=\"text\" name=\"performanceValue\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Класс устойчивости к взлому</p>\r\n                  <input type=\"text\" name=\"burglarResistanceClass\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Количество петель</p>\r\n                  <input type=\"text\" name=\"numberOfLoops\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <p className={classe.titleP}>Противосъемы</p>\r\n                  <input type=\"text\" name=\"antiSeize\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Регулировка прижима</p>\r\n                  <input type=\"text\" name=\"clipAdjustment\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Коробка</p>\r\n                  <input type=\"text\" name=\"box\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Вылет наличника от короба</p>\r\n                  <input type=\"text\" name=\"platbandDepartureFromTheBox\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Крепление</p>\r\n                  <input type=\"text\" name=\"mount\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <p className={classe.titleP}>Утеплитель</p>\r\n                  <input type=\"text\" name=\"insulation\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Усиление замковой зоны</p>\r\n                  <input type=\"text\" name=\"castleStrengthening\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Ночная задвижка</p>\r\n                  <input type=\"text\" name=\"nightValve\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Терморазрыв</p>\r\n                  <input type=\"text\" name=\"thermalBreak\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Цинкогрунт</p>\r\n                  <input type=\"text\" name=\"zinkogrunt\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <p className={classe.titleP}>Вес двери</p>\r\n                  <input type=\"text\" name=\"doorWeight\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Цена</p>\r\n                  <input type=\"text\" name=\"price\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <AppBar className={classe.appBar}>\r\n              <Toolbar className={classe.flexBetween}>\r\n                <Link\r\n                  to={{\r\n                    pathname: '/administrator',\r\n                  }}\r\n                >\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    onClick={handleCloseInsert}\r\n                    aria-label=\"close\"\r\n                  >\r\n                    <CloseIcon/>\r\n                  </IconButton>\r\n                </Link>\r\n                <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n                  САХРАНИТЬ\r\n                </Button>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <Table striped bordered hover>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label className={classe.titleP}>Категория</Form.Label>\r\n                    <Form.Control as=\"select\" name=\"category\" onChange={onchange} disabled>\r\n                      <option name=\"interior\">Межкомнатная</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Загрузить переднее фото</p>\r\n                  <input type=\"file\" name=\"frontImage\" onChange={onImagePick}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Производитель</p>\r\n                  <input type=\"text\" name=\"manufacturer\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Имя</p>\r\n                  <input type=\"text\" name=\"title\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Размер дверного блока</p>\r\n                  <input type=\"text\" name=\"doorBlockSize\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Серия</p>\r\n                  <input type=\"text\" name=\"series\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Внутреннее наполнение</p>\r\n                  <input type=\"text\" name=\"inside\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <p className={classe.titleP}>Покрытие</p>\r\n                  <input type=\"text\" name=\"coating\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Тип остекления</p>\r\n                  <input type=\"text\" name=\"glazing\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Цена за полотно</p>\r\n                  <input type=\"text\" name=\"priceFront\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Цена за комплект</p>\r\n                  <input type=\"text\" name=\"fullPrice\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n          </>\r\n        )\r\n      }\r\n\r\n\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {Init, createDoor, getHomePage})(CreateDoor)","import React from 'react'\r\n\r\nconst Logout = () => {\r\n  localStorage.removeItem('a_a_key')\r\n  window.location.href = '/signin'\r\n  return (\r\n    <div>\r\n      This is logout!\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logout","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.css'\r\nimport Header from './Components/Header'\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport Advantage from './Pages/Advantage'\r\nimport Catalog from './Pages/Catalog'\r\nimport Contact from './Pages/Contact'\r\nimport Landing from './Components/Landing'\r\nimport Footer from './Components/Footer'\r\nimport Catalogs from './Pages/Catalogs'\r\nimport Administrator from './Components/Administrator'\r\nimport SignIn from './Components/SignIn'\r\nimport DoorDesc from './Pages/DoorDesc'\r\n\r\nimport PrivateRoute from './Components/PrivateRoute'\r\n\r\nimport {Provider} from 'react-redux'\r\nimport store from './store/configureStore'\r\nimport Orders from './Components/Orders'\r\nimport AdminSlider from './Components/AdminSlider'\r\nimport AboutAdmin from './Components/AboutAdmin'\r\nimport AdminBrends from './Components/AdminBrends'\r\nimport CreateDoor from './Components/CreateDoor'\r\nimport Logout from './Components/Logout'\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Route exact path=\"/Administrator\" component={Administrator}/>\r\n        {/* <PrivateRoute path=\"/Administrator\" component={Administrator} /> */}\r\n        <Header/>\r\n        <Route exact path=\"/SignIn\" component={SignIn}/>\r\n        <Route exact path=\"/\" component={Landing}/>\r\n        <Route exact path=\"/advantage\" component={Advantage}/>\r\n        <Route exact path=\"/catalog\" component={Catalog}/>\r\n        <Route exact path=\"/contact\" component={Contact}/>\r\n        <Route path=\"/catalogs\" component={Catalogs}/>\r\n        <Route path=\"/doorDesc\" component={DoorDesc}/>\r\n        <Route path=\"/orders\" component={Orders}/>\r\n        <Route path=\"/adminSlider\" component={AdminSlider}/>\r\n        <Route path=\"/aboutAdmin\" component={AboutAdmin}/>\r\n        <Route path=\"/adminBrends\" component={AdminBrends}/>\r\n        <Route path=\"/createDoor\" component={CreateDoor}/>\r\n        <Route path=\"/logout\" component={Logout}/>\r\n      </Router>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}