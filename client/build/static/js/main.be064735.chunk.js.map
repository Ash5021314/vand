{"version":3,"sources":["Pages/images/adventages/Number-1-icon.png","Pages/images/adventages/Number-2-icon.png","Pages/images/adventages/Number-3-icon.png","Pages/images/adventages/Number-4-icon.png","Pages/images/adventages/Number-5-icon.png","Pages/images/adventages/Number-6-icon.png","Pages/images/adventages/adv.jpg","Pages/images/catalog/iron.png","Pages/images/catalog/interier.png","store/actions/messageAction.js","store/actions/types.js","Components/Header.jsx","Components/Footer.jsx","Pages/Advantage.jsx","Pages/Catalog.jsx","Pages/Contact.jsx","store/actions/layoutAction.js","Components/ControlledCarousel.jsx","Components/About.jsx","store/actions/doorsAction.js","Components/Items.jsx","Components/Brends.jsx","Components/Landing.jsx","Pages/Interior.jsx","Pages/Iron.jsx","Pages/Catalogs.jsx","store/actions/auhtAction.js","Components/Doors.jsx","Components/Notification.jsx","Components/Orders.jsx","Components/AdminSlider.jsx","Components/AboutAdmin.jsx","Components/AdminBrends.jsx","Components/Administrator.jsx","Components/SignIn.jsx","Pages/IronDesc.jsx","Pages/InteriorDesc.jsx","Pages/DoorDesc.jsx","store/reducers/authReducer.js","store/reducers/layoutReducer.js","store/reducers/messageReducer.js","store/reducers/doorsReducer.js","store/configureStore.js","Components/CreateDoor.jsx","Components/Logout.jsx","App.jsx","index.jsx"],"names":["module","exports","domain","getMessages","dispatch","a","axios","method","url","headers","data","type","payload","connect","sendMessage","doc","props","useState","show","setShow","name","phone","message","setMessage","handleClose","onChange","e","target","value","Modal","onHide","Header","closeButton","Title","Body","Form","className","onSubmit","preventDefault","test","Group","controlId","Control","placeholder","required","Button","Navbar","fixed","collapseOnSelect","expand","variant","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","to","onClick","Footer","Row","Col","xs","md","ListGroup","Item","icon","faAngleRight","faMapMarked","faPhone","faEnvelope","style","backgroundColor","dangerouslySetInnerHTML","Advantage","background","width","height","backgroundSize","backgroundRepeat","backgroundPosition","padding","display","flexDirection","textAlign","marginBottom","fontWeight","firstBackground","backgroundImage","Background1","secondBackground","Background2","thirdBackground","Background3","fourthBackground","Background4","fifthBackground","Background5","sixthBackground","Background6","sm","src","adv","alt","Catalog","Iron","Interior","Contact","title","frameBorder","getHomePage","get","state","layout","slide","setSlide","useEffect","slider","length","items","nav","loop","autoplay","slideBy","dots","dotsEach","dotData","smartSpeed","map","res","key","_id","About","about","setAbout","images","createDoor","sendDoorData","success","smallImageSame","doorId","post","response","moreImageSame","sendDoorDataToUpdate","put","getDoors","doors","ironDoors","setIronDoors","interiorDoors","setInteriorDoors","reverse","filter","category","slice","CardDeck","index","Card","Img","frontImage","otherColor","image","price","color","textDecoration","priceFront","brend","setBrend","margin","responsive","0","300","600","1000","item","Landing","marginTop","useStyles","makeStyles","theme","root","spacing","justifyContent","setDoors","classes","selectedCategory","useRef","currentPage","setPage","pageTotalCount","setPageTotalCount","doorsToShow","setDoorsToShow","location","pathname","current","Math","ceil","page","Pagination","count","event","size","setAuthToken","token","localStorage","setItem","console","log","Init","getItem","checkToken","logout","authorization","removeItem","maxWidth","mediaFront","float","mediaBack","mediaBackInterior","center","useStyle","appBar","position","save","adminDoor","marginLeft","marginRight","adminBackDoor","flex","flexBetween","flexDirectionEnd","auth","deleteItem","delete","updateDoor","createDoorOtherColor","formData","FormData","append","createDoorMore","selectedDoors","open","setOpen","openInterior","setOpenInterior","smallImage","setSmallImage","moreImage","setMoreImage","selectedDoor","setSelectedDoor","classe","onChangeFrontImage","files","patch","persist","addingValue","includes","onLittleChange","arrayName","newArray","handleAddSmallImage","handleAddMoreImage","handleSmallImageSave","window","reload","handleMoreImageSave","onDeleteItem","handleSaveAndClose","deleteOtherColor","deleteMoreImages","Grid","container","lg","CardActionArea","CardMedia","CardContent","Typography","component","CardActions","Dialog","fullScreen","onClose","AppBar","Toolbar","IconButton","edge","aria-label","autoFocus","Table","striped","bordered","hover","side","picture","defaultValue","manufacturer","doorBlockSize","series","metalSheetThickness","thickness","strengthClass","performanceValue","burglarResistanceClass","numberOfLoops","antiSeize","clipAdjustment","box","platbandDepartureFromTheBox","mount","insulation","castleStrengthening","nightValve","thermalBreak","zinkogrunt","doorWeight","inside","coating","glazing","fullPrice","top","right","messages","getSeenMessages","markAsSeen","setMessages","List","seen","ListItem","dense","button","ListItemIcon","Checkbox","checked","handleToggle","ListItemText","primary","deleteMessage","onMessageDelete","messagesData","titleP","updateSlider","img","addSlide","deleteSlide","setSlider","newSlide","setNewSlide","onUpdateSlider","onSlidePicker","onNewSlideAdd","onDeleteSlide","onUpdatePicker","img_form","updateAboutImage","setImg","about_image","sendImage","new_img","updateBrend","addBrend","deleteBrend","newBrend","setNewBrend","onUpdateBrend","onBrendPicker","onNewBrendAdd","onDeleteBrend","toolbar","paddingRight","toolbarIcon","alignItems","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","paper","fixedHeight","addButton","doorType","setDoorType","collection","setCollection","activeMenu","setActiveMenu","setChecked","modalShow","setModalShow","menus","orders","brends","notificationStyle","CssBaseline","clsx","noWrap","FormControlLabel","control","prev","Badge","badgeContent","label","Drawer","Divider","ButtonToolbar","aria-labelledby","centered","Box","pt","avatar","palette","secondary","main","form","submit","login","then","catch","password","input","setInput","Avatar","noValidate","TextField","fullWidth","autoComplete","email","mt","IronDesc","door","backContent","itemImg","info","options","frontColor","Number","active","InteriorDesc","setStyle","setInfo","split","result","find","handleClick","getInfo","initialState","isAuthenticated","rootReducer","combineReducers","action","about_img","seenMessages","middleware","thunk","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","setValue","onchange","onImagePick","Object","keys","as","Label","disabled","Redirect","Logout","App","exact","path","Administrator","SignIn","Catalogs","DoorDesc","Orders","AdminSlider","AboutAdmin","AdminBrends","CreateDoor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be064735.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Number-1-icon.e495e5ab.png\";","module.exports = __webpack_public_path__ + \"static/media/Number-2-icon.b226ea6b.png\";","module.exports = __webpack_public_path__ + \"static/media/Number-3-icon.16dceb92.png\";","module.exports = __webpack_public_path__ + \"static/media/Number-4-icon.395c817b.png\";","module.exports = __webpack_public_path__ + \"static/media/Number-5-icon.95c8e216.png\";","module.exports = __webpack_public_path__ + \"static/media/Number-6-icon.786e69d3.png\";","module.exports = __webpack_public_path__ + \"static/media/adv.d543001d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iron.9bb16c5a.png\";","module.exports = __webpack_public_path__ + \"static/media/interier.3cbd4ca3.png\";","import {\r\n  MESSAGE_SEND,\r\n  GET_MESSAGES,\r\n  GET_SEEN_MESSAGES,\r\n  DELETE_MESSAGE,\r\n  MARK_AS_SEEN,\r\n} from './types'\r\nimport axios from 'axios'\r\n\r\nconst domain = 'http://localhost:4000'\r\n\r\nexport const sendMessage = doc => {\r\n  return async dispatch => {\r\n    await axios({\r\n      method: 'POST',\r\n      url: `${domain}/messages`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: doc,\r\n    })\r\n    dispatch({ type: MESSAGE_SEND })\r\n  }\r\n}\r\n\r\nexport const getMessages = () => {\r\n  return async dispatch => {\r\n    let data = await axios({\r\n      method: 'GET',\r\n      url: `${domain}/messages`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    dispatch({ type: GET_MESSAGES, payload: data.data })\r\n  }\r\n}\r\n\r\nexport const getSeenMessages = () => {\r\n  return async dispatch => {\r\n    let data = await axios({\r\n      method: 'GET',\r\n      url: `${domain}/messages?seen=false`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    dispatch({ type: GET_SEEN_MESSAGES, payload: data.data })\r\n  }\r\n}\r\n\r\nexport const deleteMessage = id => {\r\n  return async dispatch => {\r\n    let data = await axios({\r\n      method: 'DELETE',\r\n      url: `${domain}/messages/${id}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    dispatch({ type: DELETE_MESSAGE })\r\n    if (data.data.success) {\r\n      return { success: true }\r\n    }\r\n  }\r\n}\r\n\r\nexport const markAsSeen = id => {\r\n  return async dispatch => {\r\n    let data = await axios({\r\n      method: 'PATCH',\r\n      url: `${domain}/messages/${id}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    dispatch({ type: MARK_AS_SEEN, payload: data.data })\r\n  }\r\n}\r\n","export const ADMIN_LOGIN = 'ADMIN_LOGIN'\r\nexport const ADMIN_LOGOUT = 'ADMIN_LOGOUT'\r\nexport const HOMEPAGE_DATA = 'HOMEPAGE_DATA'\r\nexport const MESSAGE_SEND = 'MESSAGE_SEND'\r\nexport const GET_MESSAGES = 'GET_MESSAGES'\r\nexport const GET_SEEN_MESSAGES = 'GET_SEEN_MESSAGES'\r\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE'\r\nexport const MARK_AS_SEEN = 'MARK_AS_SEEN'\r\nexport const UPDATE_ABOUT_IMG = 'UPDATE_ABOUT_IMG'\r\nexport const UPDATE_SLIDER = 'UPDATE_SLIDER'\r\nexport const ADD_SLIDE = 'ADD_SLIDE'\r\nexport const DELETE_SLIDE = 'DELETE_SLIDE'\r\nexport const ADD_BREND = 'ADD_BREND'\r\nexport const DELETE_BREND = 'DELETE_BREND'\r\nexport const GET_INTERIOR = 'GET_INTERIOR'\r\nexport const GET_IRON = 'GET_IRON'\r\nexport const GET_ALL = 'GET_ALL'\r\nexport const UPDATE_BREND = 'UPDATE_BREND'\r\nexport const CREATE_DOOR = 'CREATE_DOOR'\r\nexport const UPDATE_DOOR = 'UPDATE_DOOR'\r\nexport const DELETE_DOOR = 'DELETE_DOOR'\r\n","import React, { useState } from 'react'\r\nimport { Navbar } from 'react-bootstrap'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Button from 'react-bootstrap/Button'\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { sendMessage } from '../store/actions/messageAction'\r\n\r\nconst Header = props => {\r\n  const [ show, setShow ] = useState(false)\r\n  const [ message, setMessage ] = useState({ name: '', phone: '' })\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n\r\n  const onChange = e => {\r\n    setMessage({\r\n      ...message,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    let re = /[0-9]/\r\n    e.preventDefault()\r\n    if (!re.test(message.phone)) {\r\n\r\n      return false\r\n    }\r\n    props.sendMessage(message)\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Бесплатный вызов замерщика</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Заполните все поля</p>\r\n          <Form className=\"flexCenter\" onSubmit={onSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={onChange}\r\n                placeholder=\"Ваше имя\"\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <p>Введите номер телефона</p>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                onChange={onChange}\r\n                placeholder=\"Ваш телефон\"\r\n                required={true}\r\n              />\r\n            </Form.Group>\r\n            <Button className=\"custom-bg\" type=\"submit\">\r\n              вызвать\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <Navbar\r\n        fixed=\"top\"\r\n        collapseOnSelect\r\n        expand=\"md\"\r\n        className=\"backGround top\"\r\n        variant=\"dark\"\r\n      >\r\n        <Container>\r\n          <Navbar.Brand href=\"/\">VANDOORS</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto ml-auto\">\r\n              <Link to=\"/\">Главная</Link>\r\n              <Link to=\"/advantage\">Наши преимущества</Link>\r\n              <Link to=\"/catalog\">Каталог</Link>\r\n              <Link to=\"/contact\">Расположение</Link>\r\n            </Nav>\r\n            <Button className=\"custom-bg\" onClick={handleShow}>\r\n              Вызвать замерщика\r\n            </Button>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(null, { sendMessage })(Header)\r\n","import React from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport './Footer.css'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faAngleRight, faMapMarked, faPhone, faEnvelope} from '@fortawesome/free-solid-svg-icons'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer className=\"footer backGround\">\r\n        <Container>\r\n          <Row>\r\n            <Col xs={6} md={3}>\r\n              <p className=\"footer_header\"><span>О нас</span></p>\r\n              <h3>VANDOORS</h3>\r\n              <p className={'query'}>Lorem ipsum dolor sit amet, consectetur adipisicing elit. </p>\r\n            </Col>\r\n            <Col xs={6} md={2}>\r\n              <p className=\"footer_header\"><span>Ссылки</span></p>\r\n\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item className=\"padding0\"><span><FontAwesomeIcon icon={faAngleRight}/></span> <span> О Компании</span></ListGroup.Item>\r\n                <ListGroup.Item className=\"padding0\"><span><FontAwesomeIcon icon={faAngleRight}/></span>\r\n                  <span> Бренди</span> </ListGroup.Item>\r\n                <ListGroup.Item className=\"padding0\"><span><FontAwesomeIcon icon={faAngleRight}/></span> <span> Наши преимущества</span></ListGroup.Item>\r\n                <ListGroup.Item className=\"padding0\"><span><FontAwesomeIcon icon={faAngleRight}/></span>\r\n                  <span> Каталог</span></ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col xs={6} md={3}>\r\n              <p className=\"footer_header\"><span>Обратная связь </span></p>\r\n              <ListGroup>\r\n                <ListGroup.Item><span className=\"footerSpan\"><FontAwesomeIcon icon={faMapMarked}/></span><span>г. Москва, Открытое шоссе, дом 9, стр. 11</span></ListGroup.Item>\r\n                <ListGroup.Item><span className=\"footerSpan\"><FontAwesomeIcon icon={faPhone}/></span><span>8 (901) 55-44-000  <br/>  8 (919) 99-44-000</span></ListGroup.Item>\r\n                <ListGroup.Item><span className=\"footerSpan\"><FontAwesomeIcon icon={faEnvelope}/></span><span>г. Москва, Открытое шоссе, дом 9, стр. 11</span></ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              <p className=\"footer_header\"><span>Рабочие дни</span></p>\r\n              <ListGroup>\r\n                <ListGroup.Item\r\n                  className=\"fz14\"><span>С понедельника > До пятницы:</span><span>09։00 - 18։00</span></ListGroup.Item>\r\n                <ListGroup.Item className=\"fz14\"><span>В субботу:</span><span>09։00 - 13։00</span></ListGroup.Item>\r\n                <ListGroup.Item className=\"fz14\"><span>В воскресенье:</span><span>Не работаем </span></ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          <hr style={{backgroundColor: '#ffffff'}}/>\r\n          <div className=\"copy\"><span dangerouslySetInnerHTML={{'__html': '&copy;'}}/> <span> Все права защищены</span>\r\n          </div>\r\n\r\n        </Container>\r\n      </footer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, {useState} from 'react'\r\nimport './Adventage.css'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Background1 from './images/adventages/Number-1-icon.png'\r\nimport Background2 from './images/adventages/Number-2-icon.png'\r\nimport Background3 from './images/adventages/Number-3-icon.png'\r\nimport Background4 from './images/adventages/Number-4-icon.png'\r\nimport Background5 from './images/adventages/Number-5-icon.png'\r\nimport Background6 from './images/adventages/Number-6-icon.png'\r\nimport adv from './images/adventages/adv.jpg'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Footer from '../Components/Footer'\r\n\r\nconst Advantage = () => {\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  const handleClose = () => setShow(false)\r\n\r\n  const handleShow = () => setShow(true)\r\n\r\n  let background = {\r\n    width: '100%',\r\n    height: 'auto',\r\n    backgroundSize: 'contain',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    padding: '100px 0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n    marginBottom: '50px',\r\n    fontWeight: '600',\r\n  }\r\n  let firstBackground = {\r\n    backgroundImage: `url(${Background1})`,\r\n  }\r\n  let secondBackground = {\r\n    backgroundImage: `url(${Background2})`,\r\n  }\r\n  let thirdBackground = {\r\n    backgroundImage: `url(${Background3})`,\r\n  }\r\n  let fourthBackground = {\r\n    backgroundImage: `url(${Background4})`,\r\n  }\r\n  let fifthBackground = {\r\n    backgroundImage: `url(${Background5})`,\r\n  }\r\n  let sixthBackground = {\r\n    backgroundImage: `url(${Background6})`,\r\n  }\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Бесплатный вызов замерщика</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n          <p>Заполните все поля</p>\r\n          <Form className='flexCenter'>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Control type=\"text\" placeholder=\"Ваше имя\"/>\r\n\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Control type=\"text\" placeholder=\"Ваш телефон\"/>\r\n            </Form.Group>\r\n            <Button className=\"custom-bg\" type=\"submit\" onClick={handleClose}>\r\n              вызвать\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <h2 className=\"headTop\">Наши преимущества</h2>\r\n      <Container>\r\n        <Row>\r\n          <Col xs={6} md={4}>\r\n            <div style={{...firstBackground, ...background}} className=\"adv\">\r\n              <h4>Гарантия качества</h4>\r\n              <p>Гарантия на входные и межкомнатные двери - 1 год. Дополнительно гарантируем качество монтажа, также на\r\n                1 год.</p>\r\n            </div>\r\n          </Col>\r\n          <Col xs={6} md={4}>\r\n            <div style={{...secondBackground, ...background}} className=\"adv\">\r\n              <h4>Доставка на следующий день</h4>\r\n              <p>Благодаря собственному складу, выбранную дверь мы доставляем на следующий день после оформления\r\n                заказа.</p>\r\n            </div>\r\n          </Col>\r\n          <Col xs={6} md={4}>\r\n            <div style={{...thirdBackground, ...background}} className=\"adv\">\r\n              <h4>Собственное производство</h4>\r\n              <p>Мы специализируемся на создании качественного и доступного во всех отношениях продукта.</p>\r\n            </div>\r\n          </Col>\r\n          <Col xs={6} md={4}>\r\n            <div style={{...fourthBackground, ...background}} className=\"adv\">\r\n              <h4>Огромный ассортимент</h4>\r\n              <p>Более 300 готовых решений, которые удовлетворят вкусы даже самых требовательных покупателей.</p>\r\n            </div>\r\n          </Col>\r\n          <Col xs={6} md={4}>\r\n            <div style={{...fifthBackground, ...background}} className=\"adv\">\r\n              <h4>Вызов замерщика - бесплатно</h4>\r\n              <p>Мастер-замерщик снимет точные размеры дверного проема для создания подробного дизайн-проекта.</p>\r\n            </div>\r\n          </Col>\r\n          <Col xs={6} md={4}>\r\n            <div style={{...sixthBackground, ...background}} className=\"adv\">\r\n              <h4>Эксклюзивная продукция</h4>\r\n              <p>Возможность изготовления индивидуальных заказов по чертежам и эскизам покупателя.</p>\r\n            </div>\r\n          </Col>\r\n          <Col xs={12} sm={6} md={6} className=\"flex-column flexAdventage\">\r\n            <h4>Бесплатный вызов мастера-замерщика, который снимет точные размеры дверного проема для создания\r\n              подробного дизайн-проекта.</h4>\r\n            <Button className=\"custom-bg marginAuto\" onClick={handleShow}>Вызвать замерщика</Button>\r\n            <p>*Вызов замерщика является полностью бесплатным</p>\r\n          </Col>\r\n          <Col xs={12} sm={6} md={6}>\r\n            <img src={adv} alt=\"двери \" className=\"w-100 mb-40\"/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Advantage","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport {Link} from 'react-router-dom'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Iron from './images/catalog/iron.png'\r\nimport Interior from './images/catalog/interier.png'\r\nimport './Catalog.css'\r\nimport Footer from '../Components/Footer'\r\n\r\nconst Catalog = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2 className=\"headTop\">Каталог</h2>\r\n        <Row>\r\n          <Col xs={5} sm={5} md={5}>\r\n            <Link to=\"/catalogs/iron\">\r\n              <div className=\"w-100 imageHover\">\r\n                <img src={Iron} alt=\"\" className=\"w-100 image\"/>\r\n                <div className=\"middle\">\r\n                  <div className=\"text\">входные двери</div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </Col>\r\n          <Col xs={2} sm={2} md={2}/>\r\n          <Col xs={5} sm={5} md={5}>\r\n            <Link to=\"/catalogs/iron2\">\r\n              <div className=\"w-100 imageHover\">\r\n                <img src={Interior} alt=\"\" className=\"w-100 image\"/>\r\n                <div className=\"middle\">\r\n                  <div className=\"text\">межкомнатные двери</div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Catalog\r\n","import React from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport './Contact.css'\r\nimport Footer from '../Components/Footer'\r\n\r\nconst Contact = () => {\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"headTop\">Наше расположение</h2>\r\n      <Container>\r\n        <Row>\r\n          <Col xs={12} md={5}>\r\n            <div className=\"flexContact\">\r\n              <h3>Где мы находимся?</h3>\r\n              <p>г. Москва Открытое шоссе, дом 9, стр. 11</p>\r\n            </div>\r\n          </Col>\r\n          <Col xs={12} md={7} className={'mb-50  iframeclass'}>\r\n            <iframe\r\n              title={'unique'}\r\n              src=\"https://yandex.ru/map-widget/v1/?um=constructor%3Aa51e9e339159f0e01dc8d0592705c49af35e75379805d72a543d046c8314b566&amp;source=constructor\"\r\n              width=\"100%\" height=\"421\" frameBorder=\"0\"/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Contact","import {\r\n  HOMEPAGE_DATA,\r\n  UPDATE_ABOUT_IMG,\r\n  ADD_SLIDE,\r\n  UPDATE_SLIDER,\r\n  DELETE_SLIDE,\r\n  UPDATE_BREND,\r\n  DELETE_BREND,\r\n  ADD_BREND,\r\n} from './types'\r\nimport axios from 'axios'\r\n\r\nconst domain = 'http://localhost:4000'\r\n\r\nexport const getHomePage = () => {\r\n  return async dispatch => {\r\n    let data = await axios.get(`${domain}/layout/homepage`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    dispatch({type: HOMEPAGE_DATA, payload: data.data})\r\n  }\r\n}\r\n\r\nexport const updateAboutImage = (img) => {\r\n  return async dispatch => {\r\n    let data = await axios.post(`${domain}/layout/about_img`, img, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    console.log(data.data)\r\n    if (data.data.success) {\r\n      dispatch({type: UPDATE_ABOUT_IMG, payload: data.data})\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const updateSlider = (id, img) => {\r\n  return async dispatch => {\r\n    let data = await axios.patch(`${domain}/layout/slider/${id}`, img, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    console.log(data.data)\r\n    if (data.data.success) {\r\n      dispatch({type: UPDATE_SLIDER, payload: data.data})\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const addSlide = (img) => {\r\n  return async dispatch => {\r\n    let data = await axios.post(`${domain}/layout/slider`, img, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    console.log(data.data)\r\n    if (data.data.success) {\r\n      dispatch({type: ADD_SLIDE, payload: data.data})\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteSlide = (id) => {\r\n  return async dispatch => {\r\n    let data = await axios.delete(`${domain}/layout/slider/${id}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    if (data.data.success) {\r\n      dispatch({type: DELETE_SLIDE, payload: data.data})\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const updateBrend = (id, img) => {\r\n  return async dispatch => {\r\n    let data = await axios.patch(`${domain}/layout/brend/${id}`, img, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    if (data.data.success) {\r\n      dispatch({type: UPDATE_BREND, payload: data.data})\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const addBrend = (img) => {\r\n  return async dispatch => {\r\n    let data = await axios.post(`${domain}/layout/brend`, img, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    if (data.data.success) {\r\n      dispatch({type: ADD_BREND, payload: data.data})\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteBrend = (id) => {\r\n  return async dispatch => {\r\n    let data = await axios.delete(`${domain}/layout/brend/${id}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    if (data.data.success) {\r\n      dispatch({type: DELETE_BREND, payload: data.data})\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport OwlCarousel from 'react-owl-carousel'\r\nimport 'owl.carousel/dist/assets/owl.carousel.css'\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css'\r\nimport './ControlledCarousel.css'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getHomePage } from '../store/actions/layoutAction'\r\n\r\nconst ControlledCarousel = props => {\r\n  const [ slide, setSlide ] = useState([])\r\n  useEffect(() => {\r\n    props.getHomePage()\r\n    // setSlide(data.images.slideImages);\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setSlide(props.layout.slider)\r\n  }, [ props.layout ])\r\n\r\n  const options = {\r\n    items: 1,\r\n    nav: false,\r\n    loop: true,\r\n    autoplay: true,\r\n    slideBy: 1,\r\n    dots: true,\r\n    dotsEach: true,\r\n    dotData: true,\r\n    smartSpeed: 1500,\r\n  }\r\n  // console.log('slide', slide)\r\n  return (\r\n    <div className=\"slide\">\r\n      <h1 className=\"carouselHeader\">Входные и межкомнатные двери</h1>\r\n      {!slide.length ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <OwlCarousel className=\"owl-theme\" {...options}>\r\n          {slide.map(res => {\r\n            return (\r\n              <div className=\"item\" key={res._id}>\r\n                <img alt=\"\" src={res.url}/>\r\n              </div>\r\n            )\r\n          })}\r\n        </OwlCarousel>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    layout: state.layout,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getHomePage })(ControlledCarousel)\r\n","import React, {useState, useEffect} from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col'\r\nimport './About.css'\r\nimport data from '../data.json'\r\n\r\nconst About = () => {\r\n  const [about, setAbout] = useState('')\r\n\r\n  useEffect(() => {\r\n    setAbout(data.images.about)\r\n  }, [])\r\n  return (\r\n    <div className=\"about\">\r\n      <Container>\r\n        <Row>\r\n          <Col md={6} sm={6}>\r\n            <img key={about} src={about} alt=\"\" className=\"aboutImg\"/>\r\n          </Col>\r\n          <Col className=\"flex\" md={6} sm={6}>\r\n            <h2>О нас</h2>\r\n            <p>VANDOORS - дистрибьютор по продаже входных и межкомнатных дверей.</p>\r\n            <div className=\"line\"/>\r\n            <p>«Двери Регионов» - торгово-производственная компания, начавшая свою деятельность в 2008 году, сегодня\r\n              является одним из лидирующих поставщиков межкомнатных и входных дверей на московском рынке.</p>\r\n            <p>Целью Группы Компаний «Двери Регионов» является полноценное и комплексное удовлетворение потребности\r\n              людей при приобретении дверей, создание качественного и доступного во всех отношениях продукта.</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","import { GET_INTERIOR, GET_IRON, GET_ALL, UPDATE_DOOR, DELETE_DOOR } from './types'\r\nimport axios from 'axios'\r\n\r\nexport const domain = 'http://localhost:4000'\r\n\r\nexport const createDoor = data => {\r\n  return async () => {\r\n    let response = await sendDoorData(data)\r\n    if (response.success) {\r\n      return { success: true }\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateDoor = (doorId, data) => {\r\n  return async () => {\r\n    let response = await sendDoorDataToUpdate(doorId, data)\r\n    if (response.success) {\r\n      return { success: true }\r\n    }\r\n  }\r\n}\r\n\r\nconst smallImageSame = async (doorId, data) => {\r\n  try {\r\n    const response = await axios.post(`${domain}/doors/${doorId}/other-color`, data, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      },\r\n    )\r\n\r\n    return response.data.data\r\n  } catch (e) {\r\n    return\r\n  }\r\n}\r\nconst moreImageSame = async (doorId, data) => {\r\n  try {\r\n    const response = await axios.post(`${domain}/doors/${doorId}/more-image`, data, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      },\r\n    )\r\n\r\n    return response.data.data\r\n  } catch (e) {\r\n    return\r\n  }\r\n}\r\n\r\nexport const createDoorOtherColor = (doorId, data) => {\r\n  return async dispatch => {\r\n    const formData = new FormData()\r\n    for (const key in data) {\r\n      if ('image' === key) {\r\n        formData.append('img', data[key])\r\n      } else {\r\n        formData.append(key, data[key])\r\n      }\r\n    }\r\n\r\n    let response = await smallImageSame(doorId, formData)\r\n    if (response.success) {\r\n      dispatch({ type: UPDATE_DOOR, payload: response.data })\r\n    }\r\n  }\r\n\r\n// return async dispatch => {\r\n//   let response = await sendDoorData(img)\r\n//   if (response.success) {\r\n//     return {success: true}\r\n//   }\r\n// }\r\n}\r\nexport const createDoorMore = (doorId, data) => {\r\n  return async dispatch => {\r\n    const formData = new FormData()\r\n    for (const key in data) {\r\n      if ('image' === key) {\r\n        formData.append('img', data[key])\r\n      } else {\r\n        formData.append(key, data[key])\r\n      }\r\n    }\r\n\r\n    let response = await moreImageSame(doorId, formData)\r\n    if (response.success) {\r\n      dispatch({ type: UPDATE_DOOR, payload: response.data })\r\n    }\r\n  }\r\n\r\n// return async dispatch => {\r\n//   let response = await sendDoorData(img)\r\n//   if (response.success) {\r\n//     return {success: true}\r\n//   }\r\n// }\r\n}\r\n\r\nexport const deleteItem = (id) => {\r\n  return async dispatch => {\r\n    let data = await axios.delete(`${domain}/doors/${id}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n\r\n    if (data.data.success) {\r\n      dispatch({ type: DELETE_DOOR, payload: { id } })\r\n    }\r\n  }\r\n}\r\n\r\nconst sendDoorData = async data => {\r\n  let response = await axios.post(`${domain}/doors/`, data, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  })\r\n  return response.data\r\n}\r\nconst sendDoorDataToUpdate = async (doorId, data) => {\r\n  let response = await axios.put(`${domain}/doors/${doorId}`, data, {\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=utf-8',\r\n    },\r\n  })\r\n  return response.data\r\n}\r\n\r\nexport const getInteriorDoors = (skip = 0, limit = 12) => {\r\n  return async dispatch => {\r\n    let response = await axios.get(`${domain}/doors?type=interior&skip=${skip}&limit=${limit}`, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    if (response.data.success) {\r\n      dispatch({ type: GET_INTERIOR, payload: response.data })\r\n    }\r\n  }\r\n}\r\n\r\nexport const getIronDoors = (skip = 0, limit = 12) => {\r\n  return async dispatch => {\r\n    let response = await axios.get(`${domain}/doors?type=iron&skip=${skip}&limit=${limit}`, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    if (response.data.success) {\r\n      dispatch({ type: GET_IRON, payload: response.data })\r\n    }\r\n  }\r\n}\r\n\r\nexport const getDoors = () => {\r\n  return async dispatch => {\r\n    let response = await axios.get(`${domain}/doors`, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    if (response.data.success) {\r\n      dispatch({ type: GET_ALL, payload: response.data })\r\n    }\r\n  }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport './Items.css'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { getDoors } from '../store/actions/doorsAction'\r\n\r\nconst Items = (props) => {\r\n  const [ ironDoors, setIronDoors ] = useState([])\r\n  const [ interiorDoors, setInteriorDoors ] = useState([])\r\n\r\n  useEffect(() => {\r\n    props.getDoors()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    props.doors.reverse()\r\n    setIronDoors(props.doors.filter(({ category }) => category === 'iron').slice(0, 4))\r\n    setInteriorDoors(props.doors.filter(({ category }) => category === 'interior').slice(0, 4))\r\n  }, [ props.doors ])\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2 className=\"prodHeader\"> Входные двери</h2>\r\n        <CardDeck>\r\n          {!ironDoors.length ? <h2>Loading...</h2> : (\r\n            <Row style={{ width: '110%' }}>\r\n              {\r\n                ironDoors.map((res, index) => {\r\n                  return (<Col xs={6} md={3} key={index}>\r\n                      <Card>\r\n                        <div className=\"flip-box\">\r\n                          <div className=\"flip-box-inner\">\r\n                            <div className=\"flip-box-front\">\r\n                              <Card.Img variant=\"top\" src={res.frontImage}\r\n                                        style={{ height: '100%' }}/>\r\n                            </div>\r\n                            <div className=\"flip-box-back\">\r\n                              <Card.Img variant=\"top\" src={res.otherColor[0] ? res.otherColor[0].image : 'not found'}\r\n                                        style={{ height: '100%' }}/>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <Card.Body className=\"alignCenter\">\r\n                          <Card.Title>{res.title}</Card.Title>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                          <div className=\"text-muted alignCenter \">{res.price} <span>р.</span></div>\r\n                        </Card.Footer>\r\n                      </Card>\r\n                    </Col>\r\n                  )\r\n                })\r\n              }\r\n            </Row>\r\n          )}\r\n          <Button variant=\"info\" className=\"buttonCenter\"><Link to=\"catalogs/iron2\"\r\n                                                                style={{ color: 'white', textDecoration: 'none' }}>увидеть\r\n            больше</Link></Button>\r\n        </CardDeck>\r\n        <h2 className=\"prodHeader\">Межкомнатные двери</h2>\r\n        <CardDeck>\r\n          {!interiorDoors.length ? <h2>Loading...</h2> : (\r\n            <Row>\r\n              {\r\n                interiorDoors.map((res, index) => {\r\n                  return (<Col xs={6} md={3} key={index}>\r\n                      <Card>\r\n                        <div className=\"flip-box\">\r\n                          <div className=\"flip-box-\">\r\n\r\n                            <div className=\"flip-box-\">\r\n                              <Card.Img variant=\"top\" src={res.frontImage}\r\n                                        style={{ height: '100%' }}/>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <Card.Body className=\"alignCenter\">\r\n                          <Card.Title>{res.title}</Card.Title>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                          <div className=\"text-muted alignCenter \">{res.priceFront} <span>р.</span></div>\r\n                        </Card.Footer>\r\n                      </Card>\r\n                    </Col>\r\n                  )\r\n                })\r\n              }\r\n            </Row>\r\n          )}\r\n          <Button variant=\"info\" className=\"buttonCenter\"><Link to=\"catalogs/iron\"\r\n                                                                style={{ color: 'white', textDecoration: 'none' }}>увидеть\r\n            больше</Link></Button>\r\n        </CardDeck>\r\n      </Container>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    doors: state.doors,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getDoors })(Items)","import React, { useEffect, useState } from 'react'\r\nimport OwlCarousel from 'react-owl-carousel'\r\nimport 'owl.carousel/dist/assets/owl.carousel.css'\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css'\r\nimport './Brends.css'\r\n// import brends from '../data'\r\nimport { connect } from 'react-redux'\r\nimport { getHomePage } from '../store/actions/layoutAction'\r\n\r\nconst Brends = (props) => {\r\n  const [ brend, setBrend ] = useState([])\r\n  useEffect(() => {\r\n    props.getHomePage()\r\n    // setSlide(data.images.slideImages);\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setBrend(props.layout.brend)\r\n  }, [ props.layout ])\r\n  const options = {\r\n    items: 6,\r\n    nav: false,\r\n    loop: true,\r\n    autoplay: true,\r\n    slideBy: 1,\r\n    dots: false,\r\n    smartSpeed: 1000,\r\n    responsive: {\r\n      0: {\r\n        items: 2,\r\n      },\r\n      300: {\r\n        items: 3,\r\n      },\r\n\r\n      600: {\r\n        items: 4,\r\n      },\r\n      1000: {\r\n        items: 6,\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"prodHeader\">Наши Партнеры</h2>\r\n      <p className='alignCenter'>Мы сотрудничаем только с проверенными брендами.</p>\r\n      <OwlCarousel className=\"owl-theme\" margin={70} {...options}>\r\n        {\r\n          brend.map((item, index) => {\r\n            return (\r\n              <div className=\"item\" key={index}>\r\n                <img\r\n                  src={item.url}\r\n                  alt=\"brands\"/>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </OwlCarousel>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    layout: state.layout,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getHomePage })(Brends)\r\n","import React from 'react'\r\nimport ControlledCarousel from './ControlledCarousel'\r\nimport About from './About'\r\nimport Items from './Items'\r\nimport Brends from './Brends'\r\nimport Footer from \"./Footer\";\r\n\r\nconst Landing = () => {\r\n  let style = {\r\n    marginTop: '56px',\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{...style}}>\r\n        <ControlledCarousel/>\r\n        <About/>\r\n        <Items/>\r\n        <Brends/>\r\n      </div>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Landing","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nconst Interior = ({ res }) => {\r\n\r\n  return (\r\n    <Col\r\n      xs={6}\r\n      md={3}\r\n    >\r\n      <Link to={`/DoorDesc/${res._id}`}>\r\n        <Card className=\"mb-5\">\r\n          <div className=\"flipBox fixed-item\">\r\n            <div className=\"someFlipInner\">\r\n              <div className=\"someFlip\">\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src={res.frontImage}\r\n                  style={{ height: '100%' }}\r\n                  alt={'a'}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Card.Body className=\"alignCenter\">\r\n            <Card.Title style={{ color: 'grey', textDecoration: 'none' }}>{res.title}</Card.Title>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <div className=\"text-muted alignCenter \">\r\n              {res.priceFront} <span>р.</span>\r\n            </div>\r\n          </Card.Footer>\r\n        </Card>\r\n      </Link>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default Interior","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nconst Iron = ({ res }) => {\r\n  return (\r\n    <Col\r\n      xs={6}\r\n      md={3}\r\n    >\r\n      <Link to={`/DoorDesc/${res._id}`}>\r\n        <Card className=\"mb-5\">\r\n          <div className=\"flip-box\">\r\n            <div className=\"flip-box-inner\">\r\n              <div className=\"flip-box-front\">\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src={res.frontImage}\r\n                  style={\r\n                    {\r\n                      height: '100%',\r\n                    }\r\n                  }\r\n                />\r\n              </div>\r\n              {!!res.otherColor.length && (\r\n                <div className=\"flip-box-back\">\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src={res.otherColor[0].image}\r\n                    style={{ height: '100%' }}\r\n                    alt={'a'}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <Card.Body className=\"alignCenter\">\r\n            <Card.Title style={{ color: 'grey', textDecoration: 'none' }}>{res.title}</Card.Title>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <div className=\"text-muted alignCenter \">\r\n              {res.price} <span>р.</span>\r\n            </div>\r\n          </Card.Footer>\r\n        </Card>\r\n      </Link>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default Iron","import React, { useEffect, useRef, useState } from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Footer from '../Components/Footer'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport Interior from './Interior'\r\nimport Iron from './Iron'\r\nimport './Catalogs.css'\r\nimport { connect } from 'react-redux'\r\nimport { getDoors } from '../store/actions/doorsAction'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    margin: '20px 0',\r\n  },\r\n}))\r\nconst Catalogs = props => {\r\n  const doorsOnPage = 12\r\n  const [ doors, setDoors ] = useState([])\r\n  const classes = useStyles()\r\n  let selectedCategory = useRef('interior')\r\n  const [ currentPage, setPage ] = useState(1)\r\n  const [ pageTotalCount, setPageTotalCount ] = useState(1)\r\n  const [ doorsToShow, setDoorsToShow ] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (!doors.length) {\r\n      props.getDoors()\r\n    }\r\n  }, [ props, doors ])\r\n\r\n  useEffect(() => {\r\n    if (props.location.pathname === '/catalogs/iron') {\r\n      selectedCategory.current = 'iron'\r\n    }\r\n\r\n    setDoors(props.doors.filter(item => item.category === selectedCategory.current))\r\n  }, [ props.doors, props.location.pathname ])\r\n\r\n  useEffect(() => {\r\n    if (!doors.length) {\r\n      return\r\n    }\r\n\r\n    setPageTotalCount(Math.ceil(doors.length / doorsOnPage))\r\n  }, [ doors ])\r\n\r\n  useEffect(() => {\r\n    const page = (currentPage - 1) * doorsOnPage\r\n    setDoorsToShow(doors.slice(page, page + doorsOnPage))\r\n  }, [ currentPage, doors ])\r\n\r\n  const onPageChange = (event, page) => {\r\n    if (page !== currentPage) {\r\n      setPage(page)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2 className=\"headTop\">Каталог</h2>\r\n        <CardDeck>\r\n          {!doorsToShow.length ? (\r\n            <h2>Loading...</h2>\r\n          ) : (\r\n            <Row style={{ width: '100%' }}>\r\n              {doorsToShow.reverse().map((res, index) => {\r\n                if ('interior' === res.category) {\r\n                  return <Interior key={index} res={res}/>\r\n                }\r\n                return <Iron key={index} res={res}/>\r\n              })}\r\n            </Row>\r\n          )}\r\n        </CardDeck>\r\n        <div className={classes.root}>\r\n          <Pagination count={pageTotalCount} page={currentPage} onChange={onPageChange} size=\"large\"/>\r\n        </div>\r\n      </Container>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    doors: state.doors,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getDoors })(Catalogs)\r\n","import {ADMIN_LOGIN, ADMIN_LOGOUT} from './types'\r\nimport axios from 'axios'\r\n\r\nconst domain = 'http://localhost:4000'\r\n\r\nexport const login = doc => {\r\n  return dispatch => {\r\n    axios({\r\n      method: 'POST',\r\n      url: `${domain}/admin/login`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      data: doc,\r\n    })\r\n      .then(data => {\r\n        dispatch(setAuthToken(data.data.token))\r\n        window.location.href = '/administrator'\r\n      })\r\n      .catch(e => console.log('Not Allowed'))\r\n  }\r\n}\r\n\r\nconst setAuthToken = token => {\r\n  return dispatch => {\r\n    if (token && token !== '') {\r\n      localStorage.setItem('a_a_key', token)\r\n      dispatch({type: ADMIN_LOGIN, payload: token})\r\n    } else {\r\n      console.log('Unauthorized')\r\n    }\r\n  }\r\n}\r\n\r\nexport const Init = () => {\r\n  return async dispatch => {\r\n    try {\r\n      const token = localStorage.getItem('a_a_key')\r\n      let verifyToken = await checkToken(token)\r\n      if (!verifyToken) {\r\n        dispatch(logout())\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      dispatch(logout())\r\n    }\r\n  }\r\n}\r\n\r\nconst checkToken = async token => {\r\n  try {\r\n    let response = await axios({\r\n      method: 'GET',\r\n      url: `${domain}/admin/jwt_check`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `${token}`,\r\n      },\r\n    })\r\n    const {data} = response\r\n    if (data.success) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  } catch (e) {\r\n    return false\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return dispatch => {\r\n    localStorage.removeItem('a_a_key')\r\n    dispatch({type: ADMIN_LOGOUT})\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Button from '@material-ui/core/Button'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport axios from 'axios'\r\n\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  createDoor,\r\n  updateDoor,\r\n  createDoorOtherColor, domain, deleteItem, createDoorMore,\r\n} from '../store/actions/doorsAction'\r\nimport { Init } from '../store/actions/auhtAction'\r\nimport { getHomePage } from '../store/actions/layoutAction'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  mediaFront: {\r\n    height: 240,\r\n    width: '49%',\r\n    float: 'left',\r\n  },\r\n  mediaBack: {\r\n    height: 240,\r\n    width: '49%',\r\n    float: 'right',\r\n  },\r\n  mediaBackInterior: {\r\n    height: 240,\r\n    width: '49%',\r\n    float: 'none',\r\n    margin: '0 auto',\r\n  },\r\n\r\n  center: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    margin: '20px 0',\r\n  },\r\n})\r\nconst useStyle = makeStyles(() => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  save: {\r\n    float: 'right',\r\n  },\r\n  adminDoor: {\r\n    height: '200px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  adminBackDoor: {\r\n    height: '100px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  flex: {\r\n    display: 'flex',\r\n  },\r\n  flexDirection: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  flexBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  flexDirectionEnd: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-End',\r\n  },\r\n}))\r\n\r\nconst Doors = (props) => {\r\n  const doorsOnPage = 12\r\n  const { selectedDoors } = props\r\n  const [ open, setOpen ] = useState(false)\r\n  const [ openInterior, setOpenInterior ] = useState(false)\r\n  const [ smallImage, setSmallImage ] = useState({})\r\n  const [ moreImage, setMoreImage ] = useState({})\r\n  const [ selectedDoor, setSelectedDoor ] = useState(null)\r\n  const [ currentPage, setPage ] = useState(1)\r\n  const [ pageTotalCount, setPageTotalCount ] = useState(1)\r\n  const [ doorsToShow, setDoorsToShow ] = useState([])\r\n\r\n  const classes = useStyles()\r\n  const classe = useStyle()\r\n\r\n  useEffect(() => {\r\n    if (!selectedDoors.length) {\r\n      return\r\n    }\r\n\r\n    setPageTotalCount(Math.ceil(selectedDoors.length / doorsOnPage))\r\n  }, [ selectedDoors ])\r\n\r\n  useEffect(() => {\r\n    const page = (currentPage - 1) * doorsOnPage\r\n    setDoorsToShow(selectedDoors.slice(page, page + doorsOnPage))\r\n  }, [ currentPage, selectedDoors ])\r\n\r\n  const onPageChange = (event, page) => {\r\n    if (page !== currentPage) {\r\n      setPage(page)\r\n    }\r\n  }\r\n\r\n  const handleClickOpen = (door) => {\r\n    setSelectedDoor(door)\r\n    setOpen(true)\r\n  }\r\n  const handleClickOpenInterior = (door) => {\r\n    setSelectedDoor(door)\r\n    setOpenInterior(true)\r\n  }\r\n\r\n  const onChangeFrontImage = async event => {\r\n    debugger\r\n    const data = new FormData()\r\n    data.append('img', event.target.files[0])\r\n    try {\r\n      const response = await axios.patch(`${domain}/doors/${selectedDoor._id}/image`, data, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        },\r\n      )\r\n      setSelectedDoor((selectedDoor) => ({\r\n        ...selectedDoor,\r\n        frontImage: response.data,\r\n      }))\r\n    } catch {\r\n    }\r\n  }\r\n\r\n  const onChange = event => {\r\n    event.persist()\r\n    const name = event.target.name\r\n    let addingValue\r\n    if ([ 'image', 'frontImage' ].includes(name)) {\r\n      addingValue = event.target.files[0]\r\n    } else {\r\n      addingValue = event.target.value\r\n    }\r\n\r\n    // wait for state last updated version, because state next version depends on prev version\r\n    setSelectedDoor(selectedDoor => ({\r\n      ...selectedDoor,\r\n      [name]: addingValue,\r\n    }))\r\n  }\r\n\r\n  const onLittleChange = (value, arrayName, name, index) => {\r\n    setSelectedDoor((selectedDoor) => {\r\n      const newArray = [ ...selectedDoor[arrayName] ]\r\n      const field = newArray[index]\r\n      field[name] = value\r\n\r\n      return {\r\n        ...selectedDoor,\r\n        [arrayName]: newArray,\r\n      }\r\n    })\r\n  }\r\n\r\n  // const onImagePick = e => {\r\n  //   setValue({\r\n  //     ...value,\r\n  //     img: e.target.files[0],\r\n  //   })\r\n  // }\r\n  // const onchange = event => {\r\n  //   setValue({\r\n  //     ...value,\r\n  //     [event.target.name]: event.target.value,\r\n  //   })\r\n  // }\r\n\r\n  const handleAddSmallImage = event => {\r\n    const name = event.target.name\r\n    let addingValue\r\n    if ('image' === name) {\r\n      addingValue = event.target.files[0]\r\n    } else {\r\n      addingValue = event.target.value\r\n    }\r\n\r\n    setSmallImage({\r\n      ...smallImage,\r\n      [name]: addingValue,\r\n    })\r\n  }\r\n  const handleAddMoreImage = event => {\r\n    const name = event.target.name\r\n    let addingValue\r\n    if ('image' === name) {\r\n      addingValue = event.target.files[0]\r\n    } else {\r\n      addingValue = event.target.value\r\n    }\r\n\r\n    setMoreImage({\r\n      ...moreImage,\r\n      [name]: addingValue,\r\n    })\r\n  }\r\n\r\n  const handleSmallImageSave = () => {\r\n    props.createDoorOtherColor(selectedDoor._id, smallImage)\r\n    window.location.reload()\r\n  }\r\n  const handleMoreImageSave = () => {\r\n    props.createDoorMore(selectedDoor._id, moreImage)\r\n    window.location.reload()\r\n  }\r\n\r\n  const onDeleteItem = async (id) => {\r\n    await props.deleteItem(id)\r\n    setOpen(false)\r\n    setOpenInterior(false)\r\n  }\r\n  const handleSaveAndClose = async () => {\r\n    // let data = new FormData()\r\n    // Object.keys(selectedDoor).map(key => {\r\n    //   data.append(key, selectedDoor[key])\r\n    // })\r\n    let resp = await props.updateDoor(selectedDoor._id, selectedDoor)\r\n    if (resp.success) {\r\n      setOpen(false)\r\n      setOpenInterior(false)\r\n      window.location.reload()\r\n    }\r\n  }\r\n\r\n  const deleteOtherColor = async (id) => {\r\n    const response = await axios.delete(`${domain}/doors/${selectedDoor._id}/other-color/${id}`)\r\n    if (response.data.success) {\r\n      setSelectedDoor((selectedDoor) => ({\r\n        ...selectedDoor,\r\n        otherColor: selectedDoor.otherColor.filter(({ _id }) => _id !== id),\r\n      }))\r\n    }\r\n  }\r\n  const deleteMoreImages = async (id) => {\r\n    console.log('id', id)\r\n    const response = await axios.delete(`${domain}/doors/${selectedDoor._id}/more-image/${id}`)\r\n    if (response.data.success) {\r\n      setSelectedDoor((selectedDoor) => ({\r\n        ...selectedDoor,\r\n        moreImage: selectedDoor.moreImage.filter(({ _id }) => _id !== id),\r\n      }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!doorsToShow.length ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <>\r\n          <Grid container spacing={5}>\r\n            {doorsToShow.map((res, index) => {\r\n              return (\r\n                'interior' === res.category ?\r\n                  (\r\n                    <Grid item xs={6} md={3} lg={3} key={index}>\r\n                      <Card className={classes.root} onClick={() => handleClickOpenInterior(res)}>\r\n                        <CardActionArea>\r\n                          <CardMedia\r\n                            className={classes.mediaFront}\r\n                            image={res.frontImage}\r\n                          />\r\n                          <CardMedia\r\n                            className={classes.mediaBackInterior}\r\n                            image={res.otherColor === 'undefined' ? res.otherColor[0].image : null}\r\n                          />\r\n                          <div>\r\n                            <CardContent>\r\n                              <Typography variant=\"h5\" component=\"h3\">\r\n                                {res.title}\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </div>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                          <Typography component=\"p\">{res.priceFront} руб</Typography>\r\n                        </CardActions>\r\n                      </Card>\r\n                    </Grid>\r\n                  ) : (\r\n                    <Grid item xs={6} md={3} lg={3} key={index}>\r\n                      <Card className={classes.root} onClick={() => handleClickOpen(res)}>\r\n                        <CardActionArea>\r\n                          <CardMedia\r\n                            className={classes.mediaFront}\r\n                            image={res.frontImage}\r\n                          />\r\n                          <CardMedia\r\n                            className={classes.mediaBack}\r\n                            image={res.otherColor === 'undefined' ? res.otherColor[0].image : 'not found'}\r\n                          />\r\n                          <CardContent>\r\n                            <Typography variant=\"h5\" component=\"h3\">\r\n                              {res.title}\r\n                            </Typography>\r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                          <Typography component=\"p\">{res.price} руб</Typography>\r\n                        </CardActions>\r\n                      </Card>\r\n                    </Grid>\r\n                  )\r\n\r\n              )\r\n            })\r\n            }\r\n          </Grid>\r\n          <div className={classes.center}>\r\n            <Pagination count={pageTotalCount} page={currentPage} onChange={onPageChange} size=\"large\"/>\r\n          </div>\r\n        </>\r\n      )}\r\n      <Dialog fullScreen open={open} onClose={() => {\r\n        setSmallImage({})\r\n        setOpen(false)\r\n      }}>\r\n        <AppBar className={classe.appBar}>\r\n          <Toolbar className={classe.flexBetween}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                setSmallImage({})\r\n                setOpen(false)\r\n              }}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon/>\r\n            </IconButton>\r\n            <Button autoFocus color=\"inherit\" onClick={handleSaveAndClose}>\r\n              САХРАНИТЬ\r\n            </Button>\r\n            <Button autoFocus color=\"secondary\" onClick={() => onDeleteItem(selectedDoor._id)}>\r\n              Удалить\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {selectedDoor && (\r\n          <>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Дверь с наружи</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    alt=\"Remy Sharp\"\r\n                    src={selectedDoor.frontImage}\r\n                    className={classe.adminDoor}\r\n                  />\r\n                  <input type=\"file\" name=\"frontImage\" onChange={onChangeFrontImage}/>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Панель для входных дверей</th>\r\n                <th>Цена</th>\r\n                <th>Цвет</th>\r\n                <th>Сторона</th>\r\n                <th>Зарисовка</th>\r\n                <th>Опции</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input type=\"file\" name=\"image\" onChange={handleAddSmallImage}/>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" value={smallImage.price} name=\"price\" onChange={handleAddSmallImage}/>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" value={smallImage.color} name=\"color\" onChange={handleAddSmallImage}/>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" value={smallImage.side} name=\"side\" onChange={handleAddSmallImage}/>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" value={smallImage.picture} name=\"picture\" onChange={handleAddSmallImage}/>\r\n                </td>\r\n                <td>\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={handleSmallImageSave}>\r\n                    Добавить\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n              {selectedDoor.otherColor && selectedDoor.otherColor.map((res, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>\r\n                      <img\r\n                        alt=\"Remy Sharp\"\r\n                        src={res.image}\r\n                        className={classe.adminBackDoor}\r\n                      />\r\n                      {/*<input type=\"file\" name=\"littleImage\"*/}\r\n                      {/*       onChange={(event) => {*/}\r\n                      {/*         onLittleChange(event.target.value, 'otherColor', 'image', index)*/}\r\n                      {/*       }}*/}\r\n                      {/*/>*/}\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"littlePrice\"\r\n                        onChange={(event) => {\r\n                          onLittleChange(event.target.value, 'otherColor', 'price', index)\r\n                        }}\r\n                        defaultValue={res.price}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"littleColor\"\r\n                        onChange={(event) => {\r\n                          onLittleChange(event.target.value, 'otherColor', 'color', index)\r\n                        }}\r\n                        defaultValue={res.color}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"littleSide\"\r\n                        onChange={(event) => {\r\n                          onLittleChange(event.target.value, 'otherColor', 'side', index)\r\n                        }}\r\n                        defaultValue={res.side}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"LittlePicture\"\r\n                        onChange={(event) => {\r\n                          onLittleChange(event.target.value, 'otherColor', 'picture', index)\r\n                        }}\r\n                        defaultValue={res.picture}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <Button variant=\"contained\" color=\"secondary\" onClick={() => deleteOtherColor(res._id)}>\r\n                        Удалить\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Производитель</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.manufacturer}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'manufacturer'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Имя</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td> Панель для входных дверей\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.title}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'title'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Размер дверного блока</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.doorBlockSize}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'doorBlockSize'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Серия</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.series}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'series'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Толщина полотна (мм)</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.metalSheetThickness}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'metalSheetThickness'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Толщина листа металла (мм.)</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.thickness}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'thickness'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Класс прочности</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.strengthClass}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'strengthClass'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Значение по эксплутационным характеристикам</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.performanceValue}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'performanceValue'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Класс устойчивости к взлому</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.burglarResistanceClass}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'burglarResistanceClass'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Количество петель</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.numberOfLoops}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'numberOfLoops'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Противосъемы</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.antiSeize}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'antiSeize'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Регулировка прижима</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.clipAdjustment}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'clipAdjustment'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Коробка</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.box}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'box'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Вылет наличника от короба</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.platbandDepartureFromTheBox}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Крепление</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.mount}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'mount'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Утеплитель</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.insulation}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'insulation'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Усиление замковой зоны</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.castleStrengthening}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'castleStrengthening'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Ночная задвижка</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.nightValve}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'nightValve'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Терморазрыв</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.thermalBreak}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'thermalBreak'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Цинкогрунт</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.zinkogrunt}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'zinkogrunt'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Вес двери</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.doorWeight}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'doorWeight'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Цена</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.price}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'price'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Дополнительные фото</th>\r\n                <th>Опции</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input type=\"file\" name=\"image\" onChange={handleAddMoreImage}/>\r\n                </td>\r\n                <td>\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleMoreImageSave}>\r\n                    Добавить\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n              {selectedDoor.moreImage && selectedDoor.moreImage.map((item, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>\r\n                      <img alt=\"Remy Sharp\" src={item.image} className={classe.adminDoor}/>\r\n                    </td>\r\n                    <td>\r\n                      <Button variant=\"contained\" color=\"secondary\" onClick={() => deleteMoreImages(item._id)}>\r\n                        Удалить\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })\r\n              }\r\n              </tbody>\r\n            </Table>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n      <Dialog fullScreen open={openInterior} onClose={() => {\r\n        setSmallImage({})\r\n        setOpenInterior(false)\r\n      }}>\r\n        <AppBar className={classe.appBar}>\r\n          <Toolbar className={classe.flexBetween}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                setSmallImage({})\r\n                setOpenInterior(false)\r\n              }}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon/>\r\n            </IconButton>\r\n            <Button autoFocus color=\"inherit\" onClick={handleSaveAndClose}>\r\n              САХРАНИТЬ\r\n            </Button>\r\n            <Button autoFocus color=\"secondary\" onClick={() => onDeleteItem(selectedDoor._id)}>\r\n              Удалить\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {selectedDoor && (\r\n          <>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Дверь с наружи</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    alt=\"Remy Sharp\"\r\n                    src={selectedDoor.frontImage}\r\n                    className={classe.adminDoor}\r\n                  />\r\n                  <input type=\"file\" name=\"frontImage\" onChange={onChangeFrontImage}/>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Панель для межкомнотных дверей</th>\r\n                <th>Цвет</th>\r\n                <th>Опции</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input type=\"file\" name=\"image\" onChange={handleAddSmallImage}/>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"color\" onChange={handleAddSmallImage}/>\r\n                </td>\r\n\r\n                <td>\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={handleSmallImageSave}>\r\n                    Добавить\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n              {selectedDoor.otherColor && selectedDoor.otherColor.map((res, index) => {\r\n\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>\r\n                      <img\r\n                        alt=\"Remy Sharp\"\r\n                        src={res.image}\r\n                        className={classe.adminBackDoor}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"littleColor\"\r\n                        onChange={(event) => {\r\n                          onLittleChange(event.target.value, 'otherColor', 'color', index)\r\n                        }}\r\n                        defaultValue={res.color}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <Button variant=\"contained\" color=\"secondary\" onClick={() => deleteOtherColor(res._id)}>\r\n                        Удалить\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })}\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Производитель</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.manufacturer}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'manufacturer'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Имя</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.title}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'title'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Размер дверного блока</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.doorBlockSize}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'doorBlockSize'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Серия</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.series}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'series'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Внутреннее наполнение</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.inside}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'inside'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Покрытие</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.coating}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'coating'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Тип остекления</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.glazing}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'glazing'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Цена за полотно</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.priceFront}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'priceFront'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Цена за комплект</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={selectedDoor.fullPrice}\r\n                    style={{ width: '90%' }}\r\n                    onChange={onChange}\r\n                    name={'fullPrice'}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n              <tr className=\"text-light bg-dark\">\r\n                <th>Дополнительные фото</th>\r\n                <th>Опции</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input type=\"file\" name=\"image\" onChange={handleAddMoreImage}/>\r\n                </td>\r\n                <td>\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleMoreImageSave}>\r\n                    Добавить\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n              {selectedDoor.moreImage && selectedDoor.moreImage.map((item, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>\r\n                      <img alt=\"Remy Sharp\" src={item.image} className={classe.adminDoor}/>\r\n                    </td>\r\n                    <td>\r\n                      <Button variant=\"contained\" color=\"secondary\" onClick={() => deleteMoreImages(item._id)}>\r\n                        Удалить\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })\r\n              }\r\n              </tbody>\r\n            </Table>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  Init,\r\n  createDoor,\r\n  deleteItem,\r\n  updateDoor,\r\n  createDoorOtherColor,\r\n  createDoorMore,\r\n  getHomePage,\r\n})(Doors)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport { connect } from 'react-redux'\r\nimport { markAsSeen, getSeenMessages, getMessages } from '../store/actions/messageAction'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: '#00A9F7',\r\n    position: 'absolute',\r\n    top: '43px',\r\n    right: '45px',\r\n  },\r\n}))\r\n\r\nconst Notification = (props) => {\r\n  const classes = useStyles()\r\n  const [ messages, setMessages ] = useState([])\r\n\r\n  useEffect(() => {\r\n    props.getMessages()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setMessages(props.messages)\r\n  }, [ props.messages ])\r\n\r\n  const handleToggle = (id, event) => {\r\n    // console.log(id, [event.target])\r\n    // setChecked(value);\r\n    if (event.target.checked) {\r\n      props.markAsSeen(id)\r\n    }\r\n\r\n    event.target.checked = false\r\n\r\n    props.getMessages()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!!messages.length && (\r\n        <List className={classes.root}>\r\n          {messages.filter(({ seen }) => !seen).map((value, index) => {\r\n            return (\r\n              <ListItem className=\"panel\" key={index} dense button>\r\n                <ListItemIcon>\r\n                  <Checkbox onClick={(event) => handleToggle(value._id, event)}/>\r\n                </ListItemIcon>\r\n                <ListItemText primary={` ${value.name} - ${value.phone}`}/>\r\n              </ListItem>\r\n            )\r\n          })}\r\n        </List>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    messages: state.messages,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getSeenMessages, getMessages, markAsSeen })(\r\n  Notification,\r\n)\r\n","import React, { useState, useEffect } from 'react'\r\n// import Message from '../message'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getMessages, deleteMessage } from '../store/actions/messageAction'\r\n\r\nconst Orders = props => {\r\n  let [ messages, setMessages ] = useState([])\r\n  // let [seenMessages,setSeenMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    props.getMessages()\r\n  }, [ props ])\r\n  useEffect(() => {\r\n    setMessages(props.messages)\r\n  }, [ props.messages ])\r\n\r\n  const onMessageDelete = async id => {\r\n    let resp = await props.deleteMessage(id)\r\n    if (resp.success) {\r\n      let messagesData = messages.filter(message => message._id !== id)\r\n      setMessages(messagesData)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n        <tr className=\"text-light bg-dark\">\r\n          <th>Имя</th>\r\n          <th>Телефон</th>\r\n          <th>Удалить</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {messages.map((value, index) => {\r\n          return (\r\n            <tr key={index}>\r\n              <td>{value.name}</td>\r\n              <td>{value.phone}</td>\r\n              <td>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={() => onMessageDelete(value._id)}\r\n                >\r\n                  Удалить\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          )\r\n        })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    messages: state.messages,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getMessages, deleteMessage })(Orders)\r\n","import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Table from 'react-bootstrap/Table'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { updateSlider, addSlide, deleteSlide } from '../store/actions/layoutAction'\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  save: {\r\n    float: 'right',\r\n  },\r\n  adminDoor: {\r\n    height: '200px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  adminBackDoor: {\r\n    height: '100px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  flex: {\r\n    display: 'flex',\r\n  },\r\n  flexDirection: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  flexBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  flexDirectionEnd: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-End',\r\n  },\r\n  titleP: {\r\n    fontWeight: 'bold',\r\n  },\r\n}))\r\n\r\nconst AdminSlider = (props) => {\r\n  const [ selectedDoor, setSelectedDoor ] = useState(null)\r\n  const [ slider, setSlider ] = useState([])\r\n  const [ newSlide, setNewSlide ] = useState()\r\n\r\n  useEffect(() => {\r\n    setSlider(props.layout.slider)\r\n  }, [ props.layout.slider ])\r\n\r\n  // const onLittleChange = (value, arrayName, name, index) => {\r\n  //   setSelectedDoor(slider)\r\n  //   setSelectedDoor((selectedDoor) => {\r\n  //     const newArray = [...selectedDoor]\r\n  //     // console.log(newArray)\r\n  //     const field = newArray[index]\r\n  //     field[name] = value\r\n\r\n  //     return {\r\n  //       ...selectedDoor,\r\n  //       [arrayName]: newArray,\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  const onUpdateSlider = async (id) => {\r\n    await props.updateSlider(id, selectedDoor)\r\n  }\r\n\r\n  const onSlidePicker = async (e) => {\r\n    let img = new FormData()\r\n    img.append('img', e.target.files[0])\r\n    setNewSlide(img)\r\n  }\r\n\r\n  const onNewSlideAdd = async () => {\r\n    if (newSlide) {\r\n      await props.addSlide(newSlide)\r\n    }\r\n  }\r\n  const onDeleteSlide = async (id) => {\r\n    await props.deleteSlide(id)\r\n  }\r\n\r\n  const onUpdatePicker = async (img) => {\r\n    let img_form = new FormData()\r\n    img_form.append('img', img)\r\n    setSelectedDoor(img_form)\r\n  }\r\n\r\n  const classe = useStyle()\r\n  return (\r\n    <>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n        <tr className=\"text-light bg-dark\">\r\n          <th>Дополнительные фото</th>\r\n          <th>Обнавить</th>\r\n          <th>Удалить</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"file\" name=\"add_img\" onChange={onSlidePicker}/>\r\n          </td>\r\n          <td>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onNewSlideAdd}>\r\n              Добавить\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n        {slider.map((item, index) => {\r\n          return (\r\n            <tr key={index}>\r\n              <td>\r\n                <img\r\n                  alt=\"Remy Sharp\"\r\n                  src={item.url}\r\n                  className={classe.adminDoor}\r\n                />\r\n                <input type=\"file\" name=\"sliderImage\"\r\n                       onChange={(event) => {\r\n                         // onLittleChange(event.target.files[0], 'slideImages', 'name', index)\r\n                         onUpdatePicker(event.target.files[0])\r\n                       }}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => onUpdateSlider(item._id)}>\r\n                  Обнавить\r\n                </Button>\r\n              </td>\r\n              <td>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => onDeleteSlide(item._id)}>\r\n                  Удалить\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          )\r\n        })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = state => {\r\n  return { layout: state.layout }\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateSlider, addSlide, deleteSlide })(AdminSlider)","import React, { useEffect, useState } from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport { updateAboutImage } from '../store/actions/layoutAction'\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  save: {\r\n    float: 'right',\r\n  },\r\n  adminDoor: {\r\n    height: '200px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  adminBackDoor: {\r\n    height: '100px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  flex: {\r\n    display: 'flex',\r\n  },\r\n  flexDirection: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  flexBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  flexDirectionEnd: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-End',\r\n  },\r\n  titleP: {\r\n    fontWeight: 'bold',\r\n  },\r\n}))\r\nconst AboutAdmin = (props) => {\r\n\r\n  let [ img, setImg ] = useState('')\r\n  useEffect(() => {\r\n    setImg(props.layout.about_image)\r\n  }, [ props.layout.about_image ])\r\n  useEffect(() => {\r\n    setImg(props.layout.about_image)\r\n  }, [ props.layout.about_image ])\r\n  const classe = useStyle()\r\n\r\n  const onChange = async (e) => {\r\n    setImg(\r\n      e.target.files[0],\r\n    )\r\n  }\r\n\r\n  const sendImage = async () => {\r\n    let new_img = new FormData()\r\n    new_img.append('img', img)\r\n    await props.updateAboutImage(new_img)\r\n  }\r\n  return (\r\n    <>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n        <tr className=\"text-light bg-dark\">\r\n          <th>Имя</th>\r\n          <th>Обнавить</th>\r\n          <th>Удалить</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr>\r\n          <td>\r\n            <img\r\n              alt=\"Remy Sharp\"\r\n              src={img}\r\n              className={classe.adminDoor}\r\n            />\r\n            <input type=\"file\" name=\"img\" onChange={onChange}/>\r\n          </td>\r\n          <td>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={sendImage}>\r\n              Обнавить\r\n            </Button>\r\n          </td>\r\n          <td>\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Удалить\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n\r\n\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    layout: state.layout,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateAboutImage })(AboutAdmin)\r\n","import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Table from 'react-bootstrap/Table'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { updateBrend, addBrend, deleteBrend } from '../store/actions/layoutAction'\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  save: {\r\n    float: 'right',\r\n  },\r\n  adminDoor: {\r\n    height: '200px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  adminBackDoor: {\r\n    height: '100px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  flex: {\r\n    display: 'flex',\r\n  },\r\n  flexDirection: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  flexBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  flexDirectionEnd: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-End',\r\n  },\r\n  titleP: {\r\n    fontWeight: 'bold',\r\n  },\r\n}))\r\n\r\nconst AdminBrends = (props) => {\r\n  const [ selectedDoor, setSelectedDoor ] = useState(null)\r\n  const [ brend, setBrend ] = useState([])\r\n  const [ newBrend, setNewBrend ] = useState()\r\n\r\n  useEffect(() => {\r\n    setBrend(props.layout.brend)\r\n  }, [ props.layout.brend ])\r\n\r\n  // const onLittleChange = (value, arrayName, name, index) => {\r\n  //   setSelectedDoor(brends.images.slideBrends)\r\n  //   setSelectedDoor((selectedDoor) => {\r\n  //     const newArray = [...selectedDoor]\r\n  //     console.log(newArray)\r\n  //     const field = newArray[index]\r\n  //     field[name] = value\r\n\r\n  //     return {\r\n  //       ...selectedDoor,\r\n  //       [arrayName]: newArray,\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  const onUpdateBrend = async (id) => {\r\n    await props.updateBrend(id, selectedDoor)\r\n  }\r\n\r\n  const onBrendPicker = async (e) => {\r\n    let img = new FormData()\r\n    img.append('img', e.target.files[0])\r\n    setNewBrend(img)\r\n  }\r\n\r\n  const onNewBrendAdd = async () => {\r\n    if (newBrend) {\r\n      await props.addBrend(newBrend)\r\n    }\r\n  }\r\n  const onDeleteBrend = async (id) => {\r\n    await props.deleteBrend(id)\r\n  }\r\n\r\n  const onUpdatePicker = async (img) => {\r\n    let img_form = new FormData()\r\n    img_form.append('img', img)\r\n    setSelectedDoor(img_form)\r\n  }\r\n  const classe = useStyle()\r\n  return (\r\n    <>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n        <tr className=\"text-light bg-dark\">\r\n          <th>Дополнительные фото</th>\r\n          <th>Обнавить</th>\r\n          <th>Удалить</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type=\"file\" name=\"add_img\" onChange={onBrendPicker}/>\r\n          </td>\r\n          <td>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onNewBrendAdd}>\r\n              Добавить\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n        {brend.map((item, index) => {\r\n          return (\r\n            <tr key={index}>\r\n              <td>\r\n                <img\r\n                  alt=\"Remy Sharp\"\r\n                  src={item.url}\r\n                  className={classe.adminDoor}\r\n                />\r\n                <input type=\"file\" name=\"sliderImage\"\r\n                       onChange={(event) => {\r\n                         // onLittleChange(event.target.value, 'slideBrends', 'name', index)\r\n                         onUpdatePicker(event.target.files[0])\r\n                       }}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => onUpdateBrend(item._id)}>\r\n                  Обнавить\r\n                </Button>\r\n              </td>\r\n              <td>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => onDeleteBrend(item._id)}>\r\n                  Удалить\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          )\r\n        })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    layout: state.layout,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateBrend, addBrend, deleteBrend })(AdminBrends)","import React, { useState, useEffect } from 'react'\r\nimport clsx from 'clsx'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Box from '@material-ui/core/Box'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport List from '@material-ui/core/List'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport Container from '@material-ui/core/Container'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport Doors from './Doors'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Button from '@material-ui/core/Button'\r\nimport { connect } from 'react-redux'\r\nimport { Init } from '../store/actions/auhtAction'\r\nimport Notification from './Notification'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport { createDoor, getDoors } from '../store/actions/doorsAction'\r\nimport { getHomePage } from '../store/actions/layoutAction'\r\n// import doors from '../doors'\r\nimport Orders from './Orders'\r\nimport AdminSlider from './AdminSlider'\r\nimport AboutAdmin from './AboutAdmin'\r\nimport AdminBrends from './AdminBrends'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n    width: '100%',\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([ 'width', 'margin' ], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([ 'width', 'margin' ], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  center: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    margin: '20px 0',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  addButton: {\r\n    float: 'right',\r\n    marginBottom: '20px',\r\n  },\r\n}))\r\n\r\n// const useStyless = makeStyles(theme => ({\r\n//   root: {\r\n//     height: 180,\r\n//   },\r\n//\r\n//   paper: {\r\n//     margin: theme.spacing(1),\r\n//   },\r\n//   svg: {\r\n//     width: 100,\r\n//     height: 100,\r\n//   },\r\n//   polygon: {\r\n//     fill: theme.palette.common.white,\r\n//     stroke: theme.palette.divider,\r\n//     strokeWidth: 1,\r\n//   },\r\n// }))\r\n\r\nfunction Dashboard(props) {\r\n  if (!localStorage.getItem('a_a_key')) {\r\n    window.location.href = '/Signin'\r\n  }\r\n\r\n  const [ doorType, setDoorType ] = useState('iron')\r\n  // one of doors, orders, slider\r\n  const [ collection, setCollection ] = useState([])\r\n  const [ activeMenu, setActiveMenu ] = useState('doors')\r\n\r\n  const [ open, setOpen ] = useState(true)\r\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [ checked, setChecked ] = useState(false)\r\n  const [ modalShow, setModalShow ] = useState(false)\r\n  const classes = useStyles()\r\n\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Body>\r\n          <h4>Добавить дверьи</h4>\r\n          <div>\r\n            <Link to=\"/createDoor/iron\" style={{\r\n              width: '45%',\r\n              margin: '2%',\r\n            }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.addButton}\r\n                style={{ float: 'none' }}\r\n              >\r\n                Входные\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/createDoor/interior\" style={{\r\n              width: '45%',\r\n              margin: '2%',\r\n            }}>\r\n              <Button\r\n                style={{ float: 'none' }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.addButton}\r\n              >\r\n                Межкомнатные\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.getHomePage()\r\n    props.getDoors()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setCollection(props.doors)\r\n  }, [ props.doors ])\r\n\r\n  const menus = {\r\n    doors: <Doors selectedDoors={collection.filter(({ category }) => category === doorType)}/>,\r\n    orders: <Orders/>,\r\n    slider: <AdminSlider/>,\r\n    about: <AboutAdmin/>,\r\n    brends: <AdminBrends/>,\r\n  }\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleChange = () => {\r\n    setChecked(prev => !prev)\r\n  }\r\n\r\n  const notificationStyle = {\r\n    display: checked ? 'block' : 'none',\r\n  }\r\n  //\r\n  // function handleCloseInsert() {\r\n  //   setOpen(false)\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <CssBaseline/>\r\n        <AppBar\r\n          position=\"absolute\"\r\n          className={clsx(classes.appBar, open && classes.appBarShift)}\r\n        >\r\n          <Toolbar className={classes.toolbar}>\r\n            <>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                className={clsx(\r\n                  classes.menuButton,\r\n                  open && classes.menuButtonHidden,\r\n                )}\r\n              >\r\n                <MenuIcon/>\r\n              </IconButton>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap\r\n                className={classes.title}\r\n              >\r\n                ПАНЕЛЬ АДМИНИСТРАТОРА\r\n              </Typography>\r\n\r\n              <FormControlLabel\r\n                control={\r\n                  <IconButton color=\"inherit\" onClick={handleChange}>\r\n                    <Badge badgeContent={props.messages.filter(({ seen }) => !seen).length} color=\"secondary\">\r\n                      <NotificationsIcon/>\r\n                    </Badge>\r\n                  </IconButton>\r\n                }\r\n                label=\"\"/>\r\n              <div style={notificationStyle}>\r\n                <Notification/>\r\n              </div>\r\n            </>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <Divider/>\r\n          <List>\r\n            <div>\r\n              <ListItem button onClick={() => {\r\n                setDoorType('iron')\r\n                setActiveMenu('doors')\r\n              }}>\r\n                <ListItemText primary=\"Входная дверь\"/>\r\n              </ListItem>\r\n              <ListItem button onClick={() => {\r\n                setDoorType('interior')\r\n                setActiveMenu('doors')\r\n              }}>\r\n                <ListItemText primary=\"Межкомнатная дверь\"/>\r\n              </ListItem>\r\n              <ListItem button onClick={() => {\r\n                setActiveMenu('orders')\r\n              }}>\r\n                <ListItemText primary=\"Заказы\"/>\r\n              </ListItem>\r\n              <ListItem button onClick={() => {\r\n                setActiveMenu('slider')\r\n              }}>\r\n                <ListItemText primary=\"Слайдер\"/>\r\n              </ListItem>\r\n              <ListItem button onClick={() => {\r\n                setActiveMenu('about')\r\n              }}>\r\n                <ListItemText primary=\"О Нас\"/>\r\n              </ListItem>\r\n              <ListItem button onClick={() => {\r\n                setActiveMenu('brends')\r\n              }}>\r\n                <ListItemText primary=\"Бренды\"/>\r\n              </ListItem>\r\n              <ListItem button>\r\n                <Link to={'/logout'}>Logout</Link>\r\n              </ListItem>\r\n            </div>\r\n          </List>\r\n          <Divider/>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer}/>\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <ButtonToolbar>\r\n              <Button\r\n                onClick={() => setModalShow(true)}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.addButton}\r\n              >\r\n                Добавить\r\n              </Button>\r\n\r\n              <MyVerticallyCenteredModal\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n              />\r\n            </ButtonToolbar>\r\n\r\n            {menus[activeMenu]}\r\n            <Box pt={4}/>\r\n            {/*<div className={classes.center}>*/}\r\n            {/*  <Pagination count={10} size=\"large\"/>*/}\r\n            {/*</div>*/}\r\n          </Container>\r\n        </main>\r\n      </div>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n    messages: state.messages,\r\n    doors: state.doors,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { Init, createDoor, getHomePage, getDoors })(Dashboard)\r\n","import React, { useState } from 'react'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Box from '@material-ui/core/Box'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../store/actions/auhtAction'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nfunction SignIn(props) {\r\n  if (localStorage.getItem('a_a_key')) {\r\n    window.location.href = '/administrator'\r\n  }\r\n  const [ input, setInput ] = useState({\r\n    login: '',\r\n    password: '',\r\n  })\r\n\r\n  const onChange = event => {\r\n    setInput({\r\n      ...input,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n\r\n  const onSubmit = async event => {\r\n    event.preventDefault()\r\n    props.login({\r\n      login: input.login,\r\n      password: input.password,\r\n    })\r\n  }\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline/>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Login\"\r\n            name=\"login\"\r\n            autoComplete=\"false\"\r\n            autoFocus\r\n            value={input.email}\r\n            onChange={onChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={input.password}\r\n            onChange={onChange}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}></Box>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default connect(null, { login })(SignIn)\r\n","import React from 'react'\r\nimport { Row } from 'react-bootstrap'\r\nimport Col from 'react-bootstrap/Col'\r\nimport OwlCarousel from 'react-owl-carousel'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nconst IronDesc = ({ door, onClick, backContent, style, itemImg, info, item, options }) => {\r\n  return (\r\n    <>\r\n      {!door ? (<h2>Loading</h2>) :\r\n        (<Container style={backContent}>\r\n          <h2 className={'header'}>{door.title}</h2>\r\n          <Row>\r\n            <Col xs={12} md={6}>\r\n              <div className=\"leftSide\">\r\n                <div className=\"image\">\r\n                  <div className=\"frontDoor\">\r\n                    <img src={door.frontImage} alt=\"\"/>\r\n                  </div>\r\n                  <div className=\"doorParagraph\">\r\n                    <p>{door.side}</p>\r\n                    <p>Цвет: {door.frontColor}</p>\r\n                    <p>Рисунок: {door.picture}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"image\">\r\n                  <div className=\"frontDoor\">\r\n                    <img src={info.image} alt=\"\"/>\r\n                  </div>\r\n                  <div className=\"doorParagraph\">\r\n                    <p>{info.side}</p>\r\n                    <p>Цвет: {info.color}</p>\r\n                    <p>Рисунок: {info.picture}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <div className=\"price\">\r\n                <div className=\"rightSection\">\r\n                  <p>Цена</p>\r\n                  <p className=\"lastP\">{Number(door.price) + Number(info.price)} РУБ. </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"littleDoors\">\r\n                {door.otherColor.map((item, index) => {\r\n                  return (\r\n                    <div className={`little ${style.active === index ? 'littleChose' : ''} `}\r\n                         onClick={() => onClick(index, item)}\r\n                         key={index}>\r\n                      <img src={item.image} alt=\"\"/>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n            </Col>\r\n            <Col md={2}/>\r\n            <Col xs={8} md={8}>\r\n              {door.moreImage.length && (\r\n                <>\r\n                  <p className=\"moreSlide\">Дополнительные фотографии</p>\r\n                  <OwlCarousel className=\"owl-theme\" margin={70} {...options}>\r\n                    {\r\n                      door.moreImage.map((res, index) => {\r\n                        return (\r\n                          <div style={item} className=\"item\" key={index}>\r\n                            <img alt=\"\" src={res.image} style={{ itemImg }}/>\r\n                          </div>\r\n                        )\r\n                      })\r\n                    }\r\n                  </OwlCarousel>\r\n                </>\r\n              )}\r\n            </Col>\r\n            <Col md={2}/>\r\n            <Col xs={12} md={12}>\r\n              <Table striped bordered hover className=\"descTable\">\r\n                <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <p>Производитель</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.manufacturer}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Размер дверного блока</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.doorBlockSize}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Серия</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.series}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Толщина полотна мм.</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.thickness}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Толщина листа металла мм.</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.metalSheetThickness}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Класс прочности</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.strengthClass}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Значение по эксплутационным характеристикам</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.performanceValue}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Класс устойчивости к взлому</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.burglarResistanceClass}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Количество петель</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.numberOfLoops}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Противосъемы</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.antiSeize}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Регулировка прижима</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.clipAdjustment}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Короб</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.box}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Вылет наличника от короба</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.platbandDepartureFromTheBox}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Крепление</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.mount}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Утеплитель</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.insulation}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Усиление замковой зоны</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.castleStrengthening}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Ночная задвижка</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.nightValve}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Терморазрыв</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.thermalBreak}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Цинкогрунт</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.zinkogrunt}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Вес двери</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.doorWeight}\r\n                  </td>\r\n                </tr>\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Container>)}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IronDesc","import React from 'react'\r\nimport { Row } from 'react-bootstrap'\r\nimport Col from 'react-bootstrap/Col'\r\nimport OwlCarousel from 'react-owl-carousel'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nconst InteriorDesc = ({ door, onClick, backContent, info, slide, style, itemImg, item, options }) => {\r\n\r\n  return (\r\n    <>\r\n      {!!door && (\r\n        <Container\r\n          style={backContent}>\r\n          < h2\r\n            className={'header'}> {door.title}\r\n          </h2>\r\n          <Row>\r\n            <Col xs={12} md={6}>\r\n              <div className=\"leftSide\">\r\n                <div className=\"image\">\r\n                  <div className=\"frontDoor\">\r\n                    <img src={info.image} alt=\"\"/>\r\n                  </div>\r\n                  <div className=\"doorParagraph\">\r\n                    <p>Цвет: {info.color}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <div className=\"price\">\r\n                <div className=\"rightSection\">\r\n                  <p>Цена за полотно</p>\r\n                  <p className=\"lastP\">{Number(door.priceFront)} РУБ. </p>\r\n                </div>\r\n                <div className=\"rightSection\">\r\n                  <p>Цена за комплект</p>\r\n                  <p className=\"lastP\">{Number(door.priceFront) + Number(door.fullPrice)} РУБ. </p>\r\n                  <p className=\"lastP1\">В комплект входит полотно, коробка, с двух сторон наличники</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"littleDoors\">\r\n                {\r\n                  door.otherColor && door.otherColor.map((item, index) => {\r\n                    return (\r\n                      <div className={`little ${style.active === index ? 'littleChose' : ''} `}\r\n                           onClick={() => onClick(index, item)}\r\n                           key={index}>\r\n                        <img src={item.image} alt=\"\"/>\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n              </div>\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              {slide && slide.length && (\r\n                <>\r\n                  <p className=\"moreSlide\">Дополнительные фотографии</p>\r\n                  <OwlCarousel className=\"owl-theme\" margin={70} {...options}>\r\n                    {\r\n                      slide.map((res, index) => {\r\n                        return (\r\n                          <div className=\"item\" style={item} key={index}>\r\n                            <img alt=\"\" src={res.image} style={{ itemImg }}/>\r\n                          </div>\r\n                        )\r\n                      })\r\n                    }\r\n                  </OwlCarousel>\r\n                </>\r\n              )}\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              <Table striped bordered hover className=\"descTable\">\r\n                <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <p>Производитель</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.manufacturer}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Размер дверного блока</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.doorBlockSize}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Серия</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.series}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Внутреннее наполнение</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.inside}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Покрытие</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.coating}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <p>Тип остекления</p>\r\n                  </td>\r\n                  <td>\r\n                    {door.glazing}\r\n                  </td>\r\n                </tr>\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InteriorDesc","import React, { useEffect, useState } from 'react'\r\nimport './DoorDesc.css'\r\nimport Footer from '../Components/Footer'\r\nimport 'owl.carousel/dist/assets/owl.carousel.css'\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css'\r\nimport IronDesc from './IronDesc'\r\nimport { connect } from 'react-redux'\r\nimport { getDoors } from '../store/actions/doorsAction'\r\nimport InteriorDesc from './InteriorDesc'\r\n\r\nconst DoorDesc = (props) => {\r\n  const [ selectedDoor, setSelectedDoor ] = useState()\r\n  const [ style, setStyle ] = useState({\r\n    active: 0,\r\n  })\r\n  const [ info, setInfo ] = useState()\r\n\r\n  let url = props.location.pathname\r\n  let res = url.split('/')\r\n  let result = res[res.length - 1]\r\n  useEffect(() => {\r\n    if (!selectedDoor) {\r\n      props.getDoors()\r\n    }\r\n  }, [ props, selectedDoor ])\r\n\r\n  useEffect(() => {\r\n    const door = props.doors.find(item => item._id === result)\r\n    if (!door) {\r\n      return\r\n    }\r\n    setSelectedDoor(door)\r\n    setInfo({ ...door.otherColor[0] })\r\n  }, [ props.doors, result ])\r\n\r\n  const options = {\r\n    items: 3,\r\n    nav: false,\r\n    loop: true,\r\n    autoplay: true,\r\n    slideBy: 1,\r\n    dots: false,\r\n    smartSpeed: 1000,\r\n  }\r\n  const back = {\r\n    background: '#EDEDED',\r\n    position: 'absolute',\r\n    width: '100%',\r\n  }\r\n  const backContent = {\r\n    background: 'white',\r\n    marginTop: '100px',\r\n    paddingBottom: '50px',\r\n  }\r\n  const item = {\r\n    height: '200px',\r\n    width: '100px',\r\n    margin: '20px 70px',\r\n  }\r\n  const itemImg = {\r\n    height: '100%',\r\n  }\r\n  const handleClick = (index) => {\r\n    setStyle({\r\n      active: index,\r\n    })\r\n  }\r\n\r\n  const getInfo = (item) => {\r\n    setInfo({ ...item })\r\n  }\r\n\r\n  const onClick = (index, item) => {\r\n    handleClick(index)\r\n    getInfo(item)\r\n  }\r\n\r\n  return (\r\n    <div style={back}>\r\n      {!!selectedDoor ? (\r\n        <>\r\n          {('interior' === selectedDoor.category) ? (\r\n            <InteriorDesc\r\n              door={selectedDoor}\r\n              onClick={onClick}\r\n              backContent={backContent}\r\n              info={info}\r\n              style={style}\r\n              itemImg={itemImg}\r\n              item={item}\r\n              options={options}\r\n            />\r\n          ) : (\r\n            <IronDesc\r\n              door={selectedDoor}\r\n              onClick={onClick}\r\n              backContent={backContent}\r\n              info={info}\r\n              style={style}\r\n              itemImg={itemImg}\r\n              item={item}\r\n              options={options}\r\n            />\r\n          )\r\n          }\r\n        </>\r\n      ) : (\r\n        <div>There is no selected door</div>\r\n      )}\r\n      <Footer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    doors: state.doors,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getDoors })(DoorDesc)\r\n","import { ADMIN_LOGIN, ADMIN_LOGOUT } from '../actions/types'\r\n\r\nconst initialState = {\r\n  token: null,\r\n  isAuthenticated: false,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADMIN_LOGIN:\r\n      return {\r\n        ...state,\r\n        token: action.payload,\r\n        isAuthenticated: true,\r\n      }\r\n    case ADMIN_LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { HOMEPAGE_DATA, UPDATE_ABOUT_IMG, UPDATE_BREND, DELETE_BREND, ADD_BREND, UPDATE_SLIDER, ADD_SLIDE, DELETE_SLIDE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  slider: [],\r\n  brend: [],\r\n  about_image: ''\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case HOMEPAGE_DATA:\r\n      return {\r\n        ...state,\r\n        slider: action.payload.slider,\r\n        brend: action.payload.brend,\r\n        about_image: action.payload.about_image\r\n      };\r\n    case UPDATE_ABOUT_IMG:\r\n      return {\r\n        ...state,\r\n        about_image: action.payload.data.about_img\r\n      }\r\n    case ADD_SLIDE:\r\n      return {\r\n        ...state,\r\n        slider: action.payload.data.slider\r\n      }\r\n    case UPDATE_SLIDER:\r\n      return {\r\n        ...state,\r\n        slider: action.payload.data.slider\r\n      }\r\n    case DELETE_SLIDE:\r\n      return {\r\n        ...state,\r\n        slider: action.payload.data.slider\r\n      }\r\n    case ADD_BREND:\r\n      return {\r\n        ...state,\r\n        brend: action.payload.data.brend\r\n      }\r\n    case UPDATE_BREND:\r\n      return {\r\n        ...state,\r\n        brend: action.payload.data.brend\r\n      }\r\n    case DELETE_BREND:\r\n      return {\r\n        ...state,\r\n        brend: action.payload.data.brend\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  MESSAGE_SEND,\r\n  GET_MESSAGES,\r\n  GET_SEEN_MESSAGES,\r\n  MARK_AS_SEEN,\r\n} from '../actions/types'\r\n\r\nconst initialState = []\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case MESSAGE_SEND:\r\n      return {\r\n        ...state,\r\n      }\r\n    case GET_MESSAGES:\r\n      return action.payload.data\r\n    case GET_SEEN_MESSAGES:\r\n      return {\r\n        ...state,\r\n        seenMessages: action.payload.data,\r\n      }\r\n    case MARK_AS_SEEN:\r\n      const message = state.find(({ _id }) => _id === action.payload.data._id)\r\n      if (!message) {\r\n        return state\r\n      }\r\n      message.seen = true\r\n\r\n      return state\r\n    // case DELETE_MESSAGE:\r\n    //   return{\r\n\r\n    //   }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { GET_ALL, DELETE_DOOR } from '../actions/types'\r\n\r\nconst initialState = []\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    // case GET_INTERIOR:\r\n    //   return {\r\n    //     ...state,\r\n    //     interior: action.payload.data,\r\n    //   }\r\n    // case GET_IRON:\r\n    //   return {\r\n    //     ...state,\r\n    //     iron: action.payload.data,\r\n    //   }\r\n    case GET_ALL:\r\n      return action.payload.data\r\n    case  DELETE_DOOR:\r\n      return state.filter((door) => door._id !== action.payload.id)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { combineReducers } from \"redux\";\r\nimport authReducer from \"./reducers/authReducer\";\r\nimport layoutReducer from \"./reducers/layoutReducer\";\r\nimport messageReducer from \"./reducers/messageReducer\";\r\nimport doorsReducer from \"./reducers/doorsReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  layout: layoutReducer,\r\n  messages: messageReducer,\r\n  doors: doorsReducer\r\n});\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect, useState } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Button from '@material-ui/core/Button'\r\nimport Table from 'react-bootstrap/Table'\r\nimport { Form } from 'react-bootstrap'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport { Init } from '../store/actions/auhtAction'\r\nimport { createDoor } from '../store/actions/doorsAction'\r\nimport { getHomePage } from '../store/actions/layoutAction'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  save: {\r\n    float: 'right',\r\n  },\r\n  adminDoor: {\r\n    height: '200px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  adminBackDoor: {\r\n    height: '100px',\r\n    marginLeft: '20px',\r\n    marginRight: '50px',\r\n  },\r\n  flex: {\r\n    display: 'flex',\r\n  },\r\n  flexDirection: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  flexBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  flexDirectionEnd: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-End',\r\n  },\r\n  titleP: {\r\n    fontWeight: 'bold',\r\n  },\r\n}))\r\n\r\nconst CreateDoor = (props) => {\r\n  const [ doorType, setDoorType ] = useState('iron')\r\n  const [ value, setValue ] = useState({})\r\n\r\n  const classe = useStyle()\r\n  useEffect(() => {\r\n    if (window.location.pathname === '/createDoor/iron') {\r\n      setDoorType('iron')\r\n    } else {\r\n      setDoorType('interior')\r\n    }\r\n  }, [])\r\n  const onchange = event => {\r\n    setValue({\r\n      ...value,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n\r\n  const onImagePick = e => {\r\n    setValue({\r\n      ...value,\r\n      img: e.target.files[0],\r\n    })\r\n  }\r\n\r\n  const handleClose = async () => {\r\n    let img = new FormData()\r\n    img.append('img', value.img)\r\n    img.append('category', doorType)\r\n    delete value.img\r\n    Object.keys(value).map(key => {\r\n      img.append(key, value[key])\r\n      return key\r\n    })\r\n    let resp = await props.createDoor(img, value)\r\n    if (resp.success) {\r\n      window.location.href = '/administrator'\r\n    }\r\n  }\r\n\r\n  const handleCloseInsert = () => {\r\n    Redirect('/administrator')\r\n  }\r\n  return (\r\n    <>\r\n      {'iron' === doorType ?\r\n        (\r\n          <>\r\n            <AppBar className={classe.appBar}>\r\n              <Toolbar className={classe.flexBetween}>\r\n                <Link\r\n                  to={{\r\n                    pathname: '/administrator',\r\n                  }}\r\n                >\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    // onClick={handleCloseInsert}\r\n                    aria-label=\"close\"\r\n                  >\r\n                    <CloseIcon/>\r\n                  </IconButton>\r\n                </Link>\r\n                <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n                  САХРАНИТЬ\r\n                </Button>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <Table striped bordered hover>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label className={classe.titleP}>Категория</Form.Label>\r\n                    <Form.Control as=\"select\" name=\"category\" onChange={onchange} disabled>\r\n                      <option name=\"iron\">Входная</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Загрузить переднее фото</p>\r\n                  <input type=\"file\" name=\"frontImage\" onChange={onImagePick}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Цвет передней двери</p>\r\n                  <input type=\"text\" name=\"frontColor\" value={value.frontColor} onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Сторона двери</p>\r\n                  <input type=\"text\" name=\"side\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Зарисовка двери</p>\r\n                  <input type=\"text\" name=\"picture\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <p className={classe.titleP}>Производитель</p>\r\n                  <input type=\"text\" name=\"manufacturer\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Имя</p>\r\n                  <input type=\"text\" name=\"title\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Размер дверного блока</p>\r\n                  <input type=\"text\" name=\"doorBlockSize\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Серия</p>\r\n                  <input type=\"text\" name=\"series\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Толщина полотна (мм)</p>\r\n                  <input type=\"text\" name=\"thickness\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <p className={classe.titleP}>Толщина листа металла (мм.)</p>\r\n                  <input type=\"text\" name=\"metalSheetThickness\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Класс прочности</p>\r\n                  <input type=\"text\" name=\"strengthClass\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>\r\n                    Значение по эксплутационным характеристикам\r\n                  </p>\r\n                  <input type=\"text\" name=\"performanceValue\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Класс устойчивости к взлому</p>\r\n                  <input type=\"text\" name=\"burglarResistanceClass\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Количество петель</p>\r\n                  <input type=\"text\" name=\"numberOfLoops\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <p className={classe.titleP}>Противосъемы</p>\r\n                  <input type=\"text\" name=\"antiSeize\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Регулировка прижима</p>\r\n                  <input type=\"text\" name=\"clipAdjustment\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Коробка</p>\r\n                  <input type=\"text\" name=\"box\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Вылет наличника от короба</p>\r\n                  <input type=\"text\" name=\"platbandDepartureFromTheBox\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Крепление</p>\r\n                  <input type=\"text\" name=\"mount\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <p className={classe.titleP}>Утеплитель</p>\r\n                  <input type=\"text\" name=\"insulation\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Усиление замковой зоны</p>\r\n                  <input type=\"text\" name=\"castleStrengthening\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Ночная задвижка</p>\r\n                  <input type=\"text\" name=\"nightValve\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Терморазрыв</p>\r\n                  <input type=\"text\" name=\"thermalBreak\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Цинкогрунт</p>\r\n                  <input type=\"text\" name=\"zinkogrunt\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <p className={classe.titleP}>Вес двери</p>\r\n                  <input type=\"text\" name=\"doorWeight\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Цена</p>\r\n                  <input type=\"text\" name=\"price\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <AppBar className={classe.appBar}>\r\n              <Toolbar className={classe.flexBetween}>\r\n                <Link\r\n                  to={{\r\n                    pathname: '/administrator',\r\n                  }}\r\n                >\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    onClick={handleCloseInsert}\r\n                    aria-label=\"close\"\r\n                  >\r\n                    <CloseIcon/>\r\n                  </IconButton>\r\n                </Link>\r\n                <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n                  САХРАНИТЬ\r\n                </Button>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <Table striped bordered hover>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label className={classe.titleP}>Категория</Form.Label>\r\n                    <Form.Control as=\"select\" name=\"category\" onChange={onchange} disabled>\r\n                      <option name=\"interior\">Межкомнатная</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Загрузить переднее фото</p>\r\n                  <input type=\"file\" name=\"frontImage\" onChange={onImagePick}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Производитель</p>\r\n                  <input type=\"text\" name=\"manufacturer\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Имя</p>\r\n                  <input type=\"text\" name=\"title\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Размер дверного блока</p>\r\n                  <input type=\"text\" name=\"doorBlockSize\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Серия</p>\r\n                  <input type=\"text\" name=\"series\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Внутреннее наполнение</p>\r\n                  <input type=\"text\" name=\"inside\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <p className={classe.titleP}>Покрытие</p>\r\n                  <input type=\"text\" name=\"coating\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Тип остекления</p>\r\n                  <input type=\"text\" name=\"glazing\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Цена за полотно</p>\r\n                  <input type=\"text\" name=\"priceFront\" onChange={onchange}/>\r\n                </td>\r\n                <td>\r\n                  <p className={classe.titleP}>Цена за комплект</p>\r\n                  <input type=\"text\" name=\"fullPrice\" onChange={onchange}/>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n          </>\r\n        )\r\n      }\r\n\r\n\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { Init, createDoor, getHomePage })(CreateDoor)","import React from 'react'\r\n\r\nconst Logout = () => {\r\n  localStorage.removeItem('a_a_key')\r\n  window.location.href = '/signin'\r\n  return (\r\n    <div>\r\n      This is logout!\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logout","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.css'\r\nimport Header from './Components/Header'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Advantage from './Pages/Advantage'\r\nimport Catalog from './Pages/Catalog'\r\nimport Contact from './Pages/Contact'\r\nimport Landing from './Components/Landing'\r\nimport Catalogs from './Pages/Catalogs'\r\nimport Administrator from './Components/Administrator'\r\nimport SignIn from './Components/SignIn'\r\nimport DoorDesc from './Pages/DoorDesc'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/configureStore'\r\nimport Orders from './Components/Orders'\r\nimport AdminSlider from './Components/AdminSlider'\r\nimport AboutAdmin from './Components/AboutAdmin'\r\nimport AdminBrends from './Components/AdminBrends'\r\nimport CreateDoor from './Components/CreateDoor'\r\nimport Logout from './Components/Logout'\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Route exact path=\"/Administrator\" component={Administrator}/>\r\n        <Header/>\r\n        <Route exact path=\"/SignIn\" component={SignIn}/>\r\n        <Route exact path=\"/\" component={Landing}/>\r\n        <Route exact path=\"/advantage\" component={Advantage}/>\r\n        <Route exact path=\"/catalog\" component={Catalog}/>\r\n        <Route exact path=\"/contact\" component={Contact}/>\r\n        <Route path=\"/catalogs\" component={Catalogs}/>\r\n        <Route path=\"/doorDesc\" component={DoorDesc}/>\r\n        <Route path=\"/orders\" component={Orders}/>\r\n        <Route path=\"/adminSlider\" component={AdminSlider}/>\r\n        <Route path=\"/aboutAdmin\" component={AboutAdmin}/>\r\n        <Route path=\"/adminBrends\" component={AdminBrends}/>\r\n        <Route path=\"/createDoor\" component={CreateDoor}/>\r\n        <Route path=\"/logout\" component={Logout}/>\r\n      </Router>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}